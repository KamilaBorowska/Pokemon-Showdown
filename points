SELECT * FROM backlog WHERE messageid = get_random_id();
SELECT * FROM backlog WHERE messageid = get_random_id();
SELECT * FROM backlog WHERE messageid = get_random_id();
SELECT * FROM backlog WHERE messageid = get_random_id();
SELECT * FROM backlog WHERE messageid = get_random_id();
SELECT * FROM backlog WHERE messageid = get_random_id();
SELECT * FROM backlog WHERE messageid = get_random_id();
SELECT * FROM backlog WHERE messageid = get_random_id();
SELECT * FROM backlog WHERE messageid = get_random_id();
SELECT * FROM backlog WHERE messageid = get_random_id();
SELECT * FROM backlog WHERE messageid = get_random_id();
SELECT * FROM backlog WHERE messageid = get_random_id();
SELECT * FROM backlog WHERE messageid = get_random_id();
SELECT * FROM backlog, generate_series(1, 100) WHERE messageid = get_random_id();
SELECT * FROM backlog, generate_series(1, 100) WHERE messageid = get_random_id();
CREATE OR REPLACE FUNCTION get_random_id() RETURNS INT4 as $BODY$
declare
id_range record;
reply INT4;
try INT4 := 0;
BEGIN
SELECT min(id), max(id) - min(id) + 1 as range INTO id_range FROM some_data;
WHILE ( try < 10 ) LOOP
try := try + 1;
reply := floor( random() * id_range.range) + id_range.min;
perform id FROM some_data WHERE id = reply;
IF found THEN
RETURN reply;
END IF;
END LOOP;
RAISE EXCEPTION 'something strange happened - no record found in % tries', try;
END;
$BODY$ language plpgsql VOLATILE;
SELECT * FROM backlog, generate_series(1, 100) WHERE messageid = get_random_id();
SELECT * FROM backlog, generate_series(1, 100) WHERE messageid = get_random_id();
SELECT * FROM backlog, generate_series(1, 100) WHERE messageid = get_random_id();
SELECT * FROM backlog WHERE messageid = get_random_id();
CREATE OR REPLACE FUNCTION get_random_id() RETURNS INT4 as $BODY$
declare
id_range record;
reply INT4;
try INT4 := 0;
BEGIN
SELECT min(messageid), max(messageid) - min(messageid) + 1 as range INTO id_range FROM backlog;
WHILE ( try < 10 ) LOOP
try := try + 1;
reply := floor( random() * id_range.range) + id_range.min;
perform messageid FROM backlog WHERE messageid = reply;
IF found THEN
RETURN reply;
END IF;
END LOOP;
RAISE EXCEPTION 'something strange happened - no record found in % tries', try;
END;
$BODY$ language plpgsql STABLE;
CREATE OR REPLACE FUNCTION get_random_id() RETURNS INT4 as $BODY$
declare
id_range record;
reply INT4;
try INT4 := 0;
BEGIN
SELECT min(messageid), max(messageid) - min(messageid) + 1 as range INTO id_range FROM backlog;
WHILE ( try < 10 ) LOOP
try := try + 1;
reply := floor( random() * id_range.range) + id_range.min;
perform messageid FROM backlog WHERE messageid = reply;
IF found THEN
RETURN reply;
END IF;
END LOOP;
RAISE EXCEPTION 'something strange happened - no record found in % tries', try;
END;
$BODY$ language plpgsql VOLATILE;
SELECT * FROM backlog WHERE messageid = get_random_id();
EXPLAIN SELECT * FROM backlog WHERE messageid = get_random_id();
SELECT * FROM backlog WHERE messageid = (SELECT get_random_id());
SELECT * FROM backlog WHERE messageid = (SELECT get_random_id());
EXPLAIN SELECT * FROM backlog WHERE messageid = (SELECT get_random_id());
EXPLAIN SELECT * FROM backlog WHERE messageid = (SELECT get_random_id());
EXPLAIN SELECT * FROM backlog WHERE messageid = (SELECT get_random_id());
EXPLAIN SELECT * FROM backlog WHERE messageid = (SELECT get_random_id());
EXPLAIN SELECT * FROM backlog WHERE messageid = (SELECT get_random_id());
EXPLAIN SELECT * FROM backlog WHERE messageid = (SELECT get_random_id());
EXPLAIN SELECT * FROM backlog WHERE messageid = (SELECT get_random_id());
SELECT * FROM backlog WHERE messageid = (SELECT get_random_id());
EXPLAIN SELECT * FROM backlog WHERE messageid = get_random_id();
EXPLAIN SELECT * FROM backlog WHERE messageid = (SELECT get_random_id());
SELECT * FROM backlog WHERE messageid = ANY(SELECT (random() * (SELECT max(id) FROM backlog))::INT FROM generate_series(1, 20)) LIMIT 1;
SELECT * FROM backlog WHERE messageid = ANY(SELECT (random() * (SELECT max(messageid) FROM backlog))::INT FROM generate_series(1, 20)) LIMIT 1;
EXPLAINSELECT * FROM backlog WHERE messageid = ANY(SELECT (random() * (SELECT max(messageid) FROM backlog))::INT FROM generate_series(1, 20)) LIMIT 1;
EXPLAIN SELECT * FROM backlog WHERE messageid = ANY(SELECT (random() * (SELECT max(messageid) FROM backlog))::INT FROM generate_series(1, 20)) LIMIT 1;
EXPLAIN SELECT * FROM backlog WHERE messageid = ANY(SELECT (random() * (SELECT max(messageid) FROM backlog))::INT FROM generate_series(1, 20)) LIMIT 1;
EXPLAIN ANALYZE ELECT * FROM backlog WHERE messageid = ANY(SELECT (random() * (SELECT max(messageid) FROM backlog))::INT FROM generate_series(1, 20)) LIMIT 1;
EXPLAIN ANALYZE SELECT * FROM backlog WHERE messageid = ANY(SELECT (random() * (SELECT max(messageid) FROM backlog))::INT FROM generate_series(1, 20)) LIMIT 1;
EXPLAIN ANALYZE SELECT * FROM backlog WHERE messageid = ANY(SELECT (random() * (SELECT max(messageid) FROM backlog))::INT FROM generate_series(1, 20)) LIMIT 1;
EXPLAIN ANALYZE SELECT * FROM backlog WHERE messageid = ANY(SELECT (random() * (SELECT max(messageid) FROM backlog))::INT FROM generate_series(1, 20)) LIMIT 1;
EXPLAIN ANALYZE SELECT * FROM backlog WHERE messageid = ANY(SELECT (random() * (SELECT max(messageid) FROM backlog))::INT FROM generate_series(1, 20)) LIMIT 1;
EXPLAIN ANALYZE SELECT * FROM backlog WHERE messageid = ANY(ARRAY(SELECT (random() * (SELECT max(messageid) FROM backlog))::INT FROM generate_series(1, 20))) LIMIT 1;
EXPLAIN ANALYZE SELECT * FROM backlog WHERE messageid = ANY(ARRAY(SELECT (random() * (SELECT max(messageid) FROM backlog))::INT FROM generate_series(1, 20))) LIMIT 1;
SELECT * FROM backlog WHERE messageid = ANY(ARRAY(SELECT (random() * (SELECT max(messageid) FROM backlog))::INT FROM generate_series(1, 20))) LIMIT 1;
EXPLAIN ANALYZE SELECT * FROM backlog WHERE messageid = ANY(ARRAY(SELECT (random() * (SELECT max(messageid) FROM backlog))::INT FROM generate_series(1, 20))) LIMIT 1;
EXPLAIN ANALYZE SELECT * FROM backlog WHERE messageid = ANY(ARRAY(SELECT (random() * (SELECT max(messageid) FROM backlog))::INT FROM generate_series(1, 20))) LIMIT 1;
EXPLAIN ANALYZE SELECT * FROM backlog WHERE messageid = ANY(ARRAY(SELECT (random() * (SELECT max(messageid) FROM backlog))::INT FROM generate_series(1, 20))) LIMIT 1;
EXPLAIN ANALYZE SELECT * FROM backlog WHERE messageid = ANY(ARRAY(SELECT (random() * (SELECT max(messageid) FROM backlog))::INT FROM generate_series(1, 10000))) LIMIT 1;
EXPLAIN ANALYZE SELECT * FROM backlog WHERE messageid = ANY(ARRAY(SELECT (random() * (SELECT max(messageid) FROM backlog))::INT FROM generate_series(1, 10000))) LIMIT 1;
EXPLAIN ANALYZE SELECT * FROM backlog WHERE messageid = ANY(ARRAY(SELECT (random() * (SELECT max(messageid) FROM backlog))::INT FROM generate_series(1, 10000))) LIMIT 1;
EXPLAIN ANALYZE SELECT * FROM backlog WHERE messageid = ANY(ARRAY(SELECT (random() * (SELECT max(messageid) FROM backlog))::INT FROM generate_series(1, 1000))) LIMIT 1;
EXPLAIN ANALYZE SELECT * FROM backlog WHERE messageid = ANY(ARRAY(SELECT (random() * (SELECT max(messageid) FROM backlog))::INT FROM generate_series(1, 100))) LIMIT 1;
EXPLAIN ANALYZE SELECT * FROM backlog WHERE messageid = ANY(ARRAY(SELECT (random() * (SELECT max(messageid) FROM backlog))::INT FROM generate_series(1, 100))) LIMIT 1;
EXPLAIN ANALYZE SELECT * FROM backlog WHERE messageid = ANY(ARRAY(SELECT (random() * (SELECT max(messageid) FROM backlog))::INT FROM generate_series(1, 100))) LIMIT 1;
EXPLAIN ANALYZE SELECT * FROM backlog WHERE messageid = ANY(ARRAY(SELECT (random() * (SELECT max(messageid) FROM backlog))::INT FROM generate_series(1, 100))) LIMIT 1;
EXPLAIN ANALYZE SELECT * FROM backlog WHERE messageid = ANY(ARRAY(SELECT (random() * (SELECT max(messageid) FROM backlog))::INT FROM generate_series(1, 10))) LIMIT 1;
EXPLAIN ANALYZE SELECT * FROM backlog WHERE messageid = ANY(ARRAY(SELECT (random() * (SELECT max(messageid) FROM backlog))::INT FROM generate_series(1, 20))) LIMIT 1;
EXPLAIN ANALYZE SELECT * FROM backlog WHERE messageid = ANY(ARRAY(SELECT (random() * (SELECT max(messageid) FROM backlog))::INT FROM generate_series(1, 20))) LIMIT 1;
EXPLAIN ANALYZE SELECT * FROM backlog WHERE messageid = ANY(ARRAY(SELECT (random() * (SELECT max(messageid) FROM backlog))::INT FROM generate_series(1, 20))) LIMIT 1;
\db+
SELECT pg_column_size;
SELECT pg_column_size();
SELECT pg_column_size(NULL);
SELECT pg_column_size(1);
SELECT pg_column_size(2);
SELECT pg_column_size(3);
SELECT pg_column_size(11828);
SELECT pg_column_size(11828432953285);
SELECT pg_column_size(118284329532853295593295);
SELECT pg_column_size(118284329532853295593295953295329);
SELECT pg_column_size(118284329532853295593295953295329328589325893285);
SELECT pg_column_size(11828432953285329559329595329532932858932589328559329532583285);
SELECT pg_column_size(0);
SELECT pg_column_size(1.);
SELECT pg_column_size(0.);
SELECT pg_column_size(0.0);
SELECT pg_column_size(0.000);
SELECT pg_column_size(0.00000000);
SELECT pg_column_size(0.00000000000000000);
SELECT pg_column_size(0.0000000000000000000000000000000000000000000000);
SELECT pg_column_size(0.);
SELECT pg_column_size(-1.);
SELECT pg_column_size(1.);
SELECT pg_column_size(2.);
SELECT pg_column_size(1000.);
SELECT pg_column_size(1000.1000);
SELECT pg_column_size(90001000.1000);
SELECT pg_column_size(90001000.10009000);
SELECT pg_column_size(800090001000.100090008000);
SELECT pg_column_size(800090001000.10009000);
SELECT pg_column_size(800090001000.100090008);
SELECT pg_column_size(0);
SELECT pg_column_size(0);
SELECT pg_column_size(0.);
SELECT pg_column_size(0::numeric);
SELECT pg_column_size({});
SELECT pg_column_size(ARRAY());
SELECT pg_column_size(ARRAY{});
SELECT pg_column_size(ARRAY[]);
SELECT pg_column_size(ARRAY[]::integer[]);
SELECT pg_column_size(ARRAY[]::text[]);
SELECT pg_column_size(ARRAY[]::text[][]);
SELECT pg_column_size(ARRAY[]::text[][][]);
SELECT pg_column_size(ARRAY[1]);
SELECT pg_column_size(ARRAY[2]);
SELECT pg_column_size(ARRAY[1.]);
SELECT pg_column_size(ARRAY[1., 1.]);
SELECT pg_column_size(ARRAY['a']);
SELECT pg_column_size('a');
SELECT pg_column_size('');
SELECT pg_column_size('text');
SELECT pg_column_size('textual');
SELECT pg_column_size('textuality');
SELECT pg_column_size('');
SELECT pg_column_size('');
SELECT REPEAT('a', 5);
SELECT pg_column_size(repeat('a', 0));
SELECT pg_column_size(repeat('a', 1));
SELECT pg_column_size(repeat('a', 0));
SELECT repeat('a', 0);
SELECT repeat('a', 0)::TEXT;
SELECT pg_column_size(repeat('a', 0));
SELECT pg_column_size(repeat('a', 0)::TEXT);
SELECT pg_column_size(repeat('a', 0)::CHAR(1));
SELECT pg_column_size(repeat('a', 0)::"char");
SELECT pg_column_size(repeat('a', 1)::"char");
SELECT pg_column_size(repeat('a', 2)::"char");
SELECT pg_column_size(repeat('a', 3)::"char");
SELECT pg_column_size(repeat('a', 3));
SELECT pg_column_size(repeat('a', 1));
SELECT pg_column_size('a');
SELECT pg_column_size('a'::TEXT);
SELECT pg_column_size(repeat('a', 1));
SELECT pg_column_size(repeat('a', 100));
SELECT pg_column_size(repeat('a', 1000));
SELECT pg_column_size(repeat('a', 0));
SELECT pg_column_size(repeat('a', 0xFF));
SELECT pg_column_size(repeat('a', \xFF));
SELECT pg_column_size(repeat('a', 256));
;
);
)
;
SELECT pg_column_size(repeat('a', 256));
SELECT pg_column_size(repeat('a', 255));
SELECT pg_column_size(repeat('a', 25005321051));
SELECT pg_column_size(repeat('a', 250053210553291));
SELECT pg_column_size(repeat('a', 1::INT));
SELECT pg_column_size(repeat('aaaaaaaaaaaaaaaaaaa', 1::INT));
SELECT pg_column_size(repeat('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 1::INT));
SELECT pg_column_size(repeat('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 5493259));
SELECT pg_column_size(repeat('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 54932595382));
SELECT pg_column_size(repeat('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 5493259538));
SELECT pg_column_size(repeat('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 549325953));
SELECT pg_column_size(repeat('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa', 549325953));
SELECT pg_column_size('QWERTY!');
SELECT pg_column_size('xxxxxxxxxxxxxxxxxxxx');
SELECT pg_column_size('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');
SELECT pg_column_size('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');
SELECT pg_column_size('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');
SELECT pg_column_size('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');
SELECT pg_column_size('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');
SELECT pg_column_size('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');
SELECT pg_column_size('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');
SELECT pg_column_size('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');
SELECT pg_column_size('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');
SELECT pg_column_size('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');
SELECT pg_column_size('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');
SELECT pg_column_size('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');
SELECT pg_column_size('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');
SELECT pg_column_size('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');
SELECT pg_column_size('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');
SELECT pg_column_size('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');
SELECT pg_column_size('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');
SELECT pg_column_size('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');
SELECT pg_column_size('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');
SELECT pg_column_size('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');
SELECT pg_column_size('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');
SELECT pg_column_size('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');
SELECT pg_column_size('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');
SELECT pg_column_size('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');
SELECT pzg_column_size('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');
SELECT pg_column_size('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');
SELECT UNKNOWN;
SELECT UNKNOWN 'phantom';
SELECT UNKNOWN 'qwerty';
SELECT ;
SELECT 'a' || 'b';
SELECT 'a' || 'b' || 'c';
SELECT get_random_string(50);
SELECT * FROM backlog;
SELECT * FROM backlog LIMIT 10;
SELECT message FROM backlog LIMIT 10;
SELECT xmin, xmax, message FROM backlog LIMIT 10;
SELECT MAX(xmin) FROM backlog LIMIT 10;
SELECT xmin FROM backlog LIMIT 10;
SELECT xmin FROM backlog ORDER BY xmin LIMIT 10;;
SELECT xmin, xmax, message FROM backlog LIMIT 10;
SELECT xmin::int FROM backlog LIMIT 10;
SELECT xmin::text::int FROM backlog LIMIT 10;
SELECT xmin::int8 FROM backlog LIMIT 10;
SELECT xmin::numeric FROM backlog LIMIT 10;
SELECT xmin::text::numeric FROM backlog LIMIT 10;
SELECT max(xmin::text::numeric) FROM backlog LIMIT 10;
SELECT max(xmin::text::numeric) FROM backlog;
        SELECT messageid, time, sender, message, type
        FROM backlog
        JOIN sender USING (senderid)
        WHERE text_search @@ plainto_tsquery($1)
        AND bufferid = 82
        AND type IN (1, 4)
        AND message !~ '(?i)^(([abxylr]|start|select|c?(up|down|left|right)|\d+,\d+)(\+([abxylr]|start|select|c?(up|down|left|right)|\d+,\d+))* *$|!bet | |!move |!balance)'
        AND sender <> 234194
        ORDER BY messageid DESC
        LIMIT 1000;
EXPLAIN        SELECT messageid, time, sender, message, type
        FROM backlog
        JOIN sender USING (senderid)
        WHERE text_search @@ plainto_tsquery($1)
        AND bufferid = 82
        AND type IN (1, 4)
        AND message !~ '(?i)^(([abxylr]|start|select|c?(up|down|left|right)|\d+,\d+)(\+([abxylr]|start|select|c?(up|down|left|right)|\d+,\d+))* *$|!bet | |!move |!balance)'
        AND sender <> 234194
        ORDER BY messageid DESC
        LIMIT 1000;
PREPARE stmt(text) AS        SELECT messageid, time, sender, message, type
        FROM backlog
        JOIN sender USING (senderid)
        WHERE text_search @@ plainto_tsquery($1)
        AND bufferid = 82
        AND type IN (1, 4)
        AND message !~ '(?i)^(([abxylr]|start|select|c?(up|down|left|right)|\d+,\d+)(\+([abxylr]|start|select|c?(up|down|left|right)|\d+,\d+))* *$|!bet | |!move |!balance)'
        AND sender <> 234194
        ORDER BY messageid DESC
        LIMIT 1000;
PREPARE stmt(text) AS        SELECT messageid, time, sender, message, type
        FROM backlog
        JOIN sender USING (senderid)
        WHERE text_search @@ plainto_tsquery($1)
        AND bufferid = 82
        AND type IN (1, 4)
        AND message !~ '(?i)^(([abxylr]|start|select|c?(up|down|left|right)|\d+,\d+)(\+([abxylr]|start|select|c?(up|down|left|right)|\d+,\d+))* *$|!bet | |!move |!balance)'
        AND sender <> 234194
        ORDER BY messageid DESC
        LIMIT 1000;
PREPARE stmt(text) AS        SELECT messageid, time, sender, message, type
        FROM backlog
        JOIN sender USING (senderid)
        WHERE text_search @@ plainto_tsquery($1)
        AND bufferid = 82
        AND type IN (1, 4)
        AND message !~ '(?i)^(([abxylr]|start|select|c?(up|down|left|right)|\d+,\d+)(\+([abxylr]|start|select|c?(up|down|left|right)|\d+,\d+))* *$|!bet | |!move |!balance)'
        AND senderid <> 234194
        ORDER BY messageid DESC
        LIMIT 1000;
EXECUTE stmt('abc');
EXECUTE stmt('your balance is');
EXECUTE stmt('balance');
EXECUTE stmt('check');
EXECUTE stmt('check balanse');
EXECUTE stmt('bot');
EXPLAIN EXECUTE stmt('bot');
EXPLAIN ANALYZE EXECUTE stmt('bot');
EXPLAIN ANALYZE EXECUTE stmt('twitch plays pokemon');
EXECUTE stmt('twitch plays pokemon');
EXECUTE stmt('twitch plays');
EXECUTE stmt('twitch');
EXECUTE stmt('twitch');
EXECUTE stmt('simple trick');
EXECUTE stmt('simple & trick');
\d stmt
EXECUTE stmt('simple & trick');
EXPLAIN EXECUTE stmt('simple & trick');
EXECUTE stmt;
EXECUTE stmt();
EXECUTE stmt(1);
SELECT box '';
SELECT box '(0,0)';
SELECT box '(0,0), (1,1)';
SELECT @@ box '(0,0), (1,1)';
SELECT @-@ box '(0,0), (1,1)';
SELECT ?- box '(0,0), (1,1)';
SELECT ?|| box '(0,0), (1,1)';
SELECT box '(0,0), (1,1)';
SELECT @@ box '(0,0), (1,1)';
SELECT @@ @@ box '(0,0), (1,1)';
SELECT @@ box '(0,0), (1,1)';
SELECT @@ @@ box '(0,0), (1,1)';
SELECT box '(0,0), (1,1)';
SELECT box '(0,0), 1,1';
SELECT box '0,0, 1,1';
SELECT box '0, 0, 1, 1';
SELECT point(1, 2)
;9
SELECT box(0, 0, 1, 1);
SELECT box((0, 0), (1, 1));
SELECT box(point(0, 0), point(1, 1));
SELECT box(point(0, 0) AS a, point(1, 1));
SELECT point(0, 0) AS a, box(a, point(1, 1));
SELECT point(0, 0) AS a, box(a, a);
SELECT * FROM (SELECT point(0, 0) AS a) AS a, box(a, a);
SELECT * FROM (SELECT point(0, 0) AS a) AS a;
SELECT * FROM (SELECT point(0, 0)) AS point;
SELECT box(a, a) FROM (SELECT point(0, 0)) AS point;
SELECT box(point, point) FROM (SELECT point(0, 0)) AS point;
SELECT box(point, point) FROM (SELECT point(0, 0)) AS sprite_beginning, (SELECT point + point(16, 16)) AS sprite_ending;
SELECT box(point, point) FROM (SELECT point(0, 0)) AS sprite_beginning, (SELECT sprite_beginning + point(16, 16)) AS sprite_ending;
WITH sprite_beginning(point) AS (
    SELECT point(0, 0)
)
WITH sprite_ending(point) AS (
    SELECT point + point(16, 16) FROM sprite_beginning
)
SELECT box(b.point, e.point) FROM sprite_beginning AS b, sprite_ending AS e;
WITH
sprite_beginning(point) AS (
    SELECT point(0, 0)
),
sprite_ending(point) AS (
    SELECT point + point(16, 16) FROM sprite_beginning
)
SELECT box(b.point, e.point) FROM sprite_beginning AS b, sprite_ending AS e;
EXPLAIN WITH
sprite_beginning(point) AS (
    SELECT point(0, 0)
),
sprite_ending(point) AS (
    SELECT point + point(16, 16) FROM sprite_beginning
)
SELECT box(b.point, e.point) FROM sprite_beginning AS b, sprite_ending AS e;
EXPLAIN ANALYZE WITH
sprite_beginning(point) AS (
    SELECT point(0, 0)
),
sprite_ending(point) AS (
    SELECT point + point(16, 16) FROM sprite_beginning
)
SELECT box(b.point, e.point) FROM sprite_beginning AS b, sprite_ending AS e;
EXPLAIN ANALYZE WITH
sprite_beginning(point) AS (
    SELECT point(0, 0)
),
sprite_ending(point) AS (
    SELECT point + point(16, 16) FROM sprite_beginning
)
SELECT box(b.point, e.point) FROM sprite_beginning AS b, sprite_ending AS e;
EXPLAIN ANALYZE WITH
sprite_beginning(point) AS (
    SELECT point(0, 0)
),
sprite_ending(point) AS (
    SELECT point + point(16, 16) FROM sprite_beginning
)
SELECT box(b.point, e.point) FROM sprite_beginning AS b, sprite_ending AS e;
EXPLAIN ANALYZE WITH
sprite_beginning(point) AS (
    SELECT point(0, 0)
),
sprite_ending(point) AS (
    SELECT point + point(16, 16) FROM sprite_beginning
)
SELECT box(b.point, e.point) FROM sprite_beginning AS b, sprite_ending AS e;
SELECT * FROM forum_postrevision_id_seq ;
SELECT * FROM forum_postrevision;
SELECT * FROM forum_revision;
SELECT * FROM forum_post;
WITH initial_posts AS (
    SELECT * FROM forum_post
)
SELECT * FROM initial_posts;
WITH initial_posts AS (
    SELECT *FROM forum_post
)
SELECT * FROM initial_posts;
WITH initial_posts AS (
    SELECT *FROM forum_post
)
SELECT * FROM initial_posts
;
\d post_revision
\d forum_post
\d forum_revision
WITH initial_revisions AS (
    SELECT * FROM forum_revision
)
SELECT * FROM initial_revisions;
WITH initial_revisions AS (
    SELECT MIN(date_created)
    FROM forum_revision
    GROUP BY post_id
)
SELECT *
FROM initial_revisions;
WITH initial_revisions AS (
    SELECT * FROM forum_revision
)
SELECT * FROM initial_revisions;
WITH initial_revisions AS (
    SELECT post_id, COUNT(*)
    FROM forum_revision
    GROUP BY post_id
)
SELECT *
FROM initial_revisions;
WITH initial_revisions AS (
    SELECT post_id, MIN(date_created)
    FROM forum_revision
    GROUP BY post_id
)
SELECT *
FROM initial_revisions;
EXPLAIN WITH initial_revisions AS (
    SELECT post_id, MIN(date_created)
    FROM forum_revision
    GROUP BY post_id
)
SELECT *
FROM initial_revisions;
EXPLAIN ANALYZE WITH initial_revisions AS (
    SELECT post_id, MIN(date_created)
    FROM forum_revision
    GROUP BY post_id
)
SELECT *
FROM initial_revisions;
WITH initial_revisions AS (
    SELECT *
    FROM
        forum_post AS p,
        (
            SELECT *
            FROM post_revision
            WHERE post_id = p.id
            ORDER BY date_created
            LIMIT 1
        ) AS r
)
SELECT *
FROM initial_revisions;
WITH initial_revisions AS (
    SELECT *
    FROM
        forum_post AS p,
        (
            SELECT *
            FROM forum_revision
            WHERE post_id = p.id
            ORDER BY date_created
            LIMIT 1
        ) AS r
)
SELECT *
FROM initial_revisions;
WITH initial_revisions AS (
    SELECT *, (
        SELECT *
        FROM forum_revision
        WHERE post_id = p.id
        ORDER BY date_created
        LIMIT 1
    )
    FROM
        forum_post AS p
)
SELECT *
FROM initial_revisions;
WITH initial_revisions AS (
    SELECT *, VALUES(
        SELECT *
        FROM forum_revision
        WHERE post_id = p.id
        ORDER BY date_created
        LIMIT 1
    )
    FROM
        forum_post AS p
)
SELECT *
FROM initial_revisions;
WITH initial_revisions AS (
    SELECT *, VALUES (
        SELECT id
        FROM forum_revision
        WHERE post_id = p.id
        ORDER BY date_created
        LIMIT 1
    )
    FROM
        forum_post AS p
)
SELECT *
FROM initial_revisions;
WITH initial_revisions AS (
    SELECT *, (
        SELECT id
        FROM forum_revision
        WHERE post_id = p.id
        ORDER BY date_created
        LIMIT 1
    )
    FROM
        forum_post AS p
)
SELECT *
FROM initial_revisions;
EXPLAIN WITH initial_revisions AS (
    SELECT *, (
        SELECT id
        FROM forum_revision
        WHERE post_id = p.id
        ORDER BY date_created
        LIMIT 1
    )
    FROM
        forum_post AS p
)
SELECT *
FROM initial_revisions;
WITH initial_revisions AS (
    SELECT *, (
        SELECT id
        FROM forum_revision
        WHERE post_id = p.id
        ORDER BY date_created
        LIMIT 1
    ) AS revision_id
    JOIN forum_revision AS r
        ON (revision_id = r.id)
    FROM
        forum_post AS p
)
SELECT *
FROM initial_revisions;
WITH initial_revisions AS (
    SELECT *, (
        SELECT id
        FROM forum_revision
        WHERE post_id = p.id
        ORDER BY date_created
        LIMIT 1
    ) AS revision_id
    FROM
        forum_post AS p
    JOIN forum_revision AS r
        ON (revision_id = r.id)
)
SELECT *
FROM initial_revisions;
WITH initial_revisions AS (
    SELECT *
    FROM
        forum_post AS p
    JOIN forum_revision AS r
        ON (r.id = (
            SELECT id
            FROM forum_revision
            WHERE post_id = p.id
            ORDER BY date_created
            LIMIT 1
        ))
)
SELECT *
FROM initial_revisions;
EXPLAIN WITH initial_revisions AS (
    SELECT *
    FROM
        forum_post AS p
    JOIN forum_revision AS r
        ON (r.id = (
            SELECT id
            FROM forum_revision
            WHERE post_id = p.id
            ORDER BY date_created
            LIMIT 1
        ))
)
SELECT *
FROM initial_revisions;
EXPLAIN ANALYZE WITH initial_revisions AS (
    SELECT *
    FROM
        forum_post AS p
    JOIN forum_revision AS r
        ON (r.id = (
            SELECT id
            FROM forum_revision
            WHERE post_id = p.id
            ORDER BY date_created
            LIMIT 1
        ))
)
SELECT *
FROM initial_revisions;
WITH initial_revisions AS (
    SELECT *
    FROM
        forum_post AS p
    JOIN forum_revision AS r
        ON (r.id = (
            SELECT id
            FROM forum_revision
            WHERE post_id = p.id
            ORDER BY date_created
            LIMIT 1
        ))
    ORDER BY date_created
)
SELECT *
FROM initial_revisions;
EXPLAIN ANALYZE WITH initial_revisions AS (
    SELECT *
    FROM
        forum_post AS p
    JOIN forum_revision AS r
        ON (r.id = (
            SELECT id
            FROM forum_revision
            WHERE post_id = p.id
            ORDER BY date_created
            LIMIT 1
        ))
    ORDER BY date_created
)
SELECT *
FROM initial_revisions;
WITH initial_revisions AS (
    SELECT *
    FROM
        forum_post AS p
    JOIN forum_revision AS r
        ON (r.id = (
            SELECT id
            FROM forum_revision
            WHERE post_id = p.id
            ORDER BY date_created
            LIMIT 1
        ))
    ORDER BY date_created
)
SELECT *
FROM initial_revisions;
WITH initial_revisions AS (
    SELECT *
    FROM
        forum_post AS p
    JOIN forum_revision AS r
        ON (r.id = (
            SELECT id
            FROM forum_revision
            WHERE post_id = p.id
            ORDER BY date_created
            LIMIT 1
        ))
    ORDER BY date_created DESC
)
SELECT *
FROM initial_revisions;
EXPLAIN WITH initial_revisions AS (
    SELECT *
    FROM
        forum_post AS p
    JOIN forum_revision AS r
        ON (r.id = (
            SELECT id
            FROM forum_revision
            WHERE post_id = p.id
            ORDER BY date_created
            LIMIT 1
        ))
    ORDER BY date_created DESC
)
SELECT *
FROM initial_revisions;
EXPLAIN ANALYZE WITH initial_revisions AS (
    SELECT *
    FROM
        forum_post AS p
    JOIN forum_revision AS r
        ON (r.id = (
            SELECT id
            FROM forum_revision
            WHERE post_id = p.id
            ORDER BY date_created
            LIMIT 1
        ))
    ORDER BY date_created DESC
)
SELECT *
FROM initial_revisions;
WITH initial_revisions AS (
    SELECT *
    FROM
        forum_post AS p
    JOIN forum_revision AS r
        ON (r.id = (
            SELECT id
            FROM forum_revision
            WHERE post_id = p.id
            ORDER BY date_created
            LIMIT 1
        ))
    ORDER BY date_created DESC
)
SELECT *
FROM initial_revisions
LIMIT 1;
EXPLAIN ANALYZE WITH initial_revisions AS (
    SELECT *
    FROM
        forum_post AS p
    JOIN forum_revision AS r
        ON (r.id = (
            SELECT id
            FROM forum_revision
            WHERE post_id = p.id
            ORDER BY date_created
            LIMIT 1
        ))
    ORDER BY date_created DESC
)
SELECT *
FROM initial_revisions
LIMIT 1;
WITH initial_revisions AS (
    SELECT *
    FROM
        forum_post AS p
    JOIN forum_revision AS r
        ON (r.id = (
            SELECT id
            FROM forum_revision
            WHERE post_id = p.id
            ORDER BY date_created
            LIMIT 1
        ))
    ORDER BY date_created DESC
    LIMIT 1
)
SELECT *
FROM initial_revisions;
EXPLAIN ANALYZE WITH initial_revisions AS (
    SELECT *
    FROM
        forum_post AS p
    JOIN forum_revision AS r
        ON (r.id = (
            SELECT id
            FROM forum_revision
            WHERE post_id = p.id
            ORDER BY date_created
            LIMIT 1
        ))
    ORDER BY date_created DESC
    LIMIT 1
)
SELECT *
FROM initial_revisions;
SELECT ABSTIME '';
CREATE ROLE discourse WITH LOGIN ENCRYPTED PASSWORD 'discourse' CREATEDB SUPERUSER;
\du
CREATE DATABASE discourse_development WITH OWNER discourse ENCODING 'UTF8' TEMPLATE template0;
CREATE DATABASE discourse_test WITH OWNER discourse ENCODING 'UTF8' TEMPLATE template0;
CREATE EXTENSION pg_trgm;
CREATE EXTENSION hstore;
SELECT 'a' -> 'b';
SELECT 'a' => 'b';
SELECT HSTORE 'a => b';
SELECT (HSTORE 'a => b');
SELECT (HSTORE 'a => b') -> 'a';
SELECT (HSTORE 'a => b')->'a';
SELECT (HSTORE 'a => b')->'b';
SELECT (HSTORE 'a => b') ||;
SELECT (HSTORE 'a => b') || HSTORE;
SELECT (HSTORE 'a => b') || HSTORE; ''
SELECT (HSTORE 'a => b') || HSTORE '';
SELECT (HSTORE 'a => b') || HSTORE 'b => c';
SELECT HSTORE 'a => b' || HSTORE 'b => c';
EXPLAIN SELECT HSTORE 'a => b' || HSTORE 'b => c';
\db
\dd
\d?
\?
\;
;
\l
\d
SELECT  "topics"."id" AS t0_r0, "topics"."title" AS t0_r1, "topics"."last_posted_at" AS t0_r2, "topics"."created_at" AS t0_r3, "topics"."updated_at" AS t0_r4, "topics"."views" AS t0_r5, "topics"."posts_count" AS t0_r6, "topics"."user_id" AS t0_r7, "topics"."last_post_user_id" AS t0_r8, "topics"."reply_count" AS t0_r9, "topics"."featured_user1_id" AS t0_r10, "topics"."featured_user2_id" AS t0_r11, "topics"."featured_user3_id" AS t0_r12, "topics"."avg_time" AS t0_r13, "topics"."deleted_at" AS t0_r14, "topics"."highest_post_number" AS t0_r15, "topics"."image_url" AS t0_r16, "topics"."off_topic_count" AS t0_r17, "topics"."like_count" AS t0_r18, "topics"."incoming_link_count" AS t0_r19, "topics"."bookmark_count" AS t0_r20, "topics"."star_count" AS t0_r21, "topics"."category_id" AS t0_r22, "topics"."visible" AS t0_r23, "topics"."moderator_posts_count" AS t0_r24, "topics"."closed" AS t0_r25, "topics"."archived" AS t0_r26, "topics"."bumped_at" AS t0_r27, "topics"."has_summary" AS t0_r28, "topics"."vote_count" AS t0_r29, "topics"."archetype" AS t0_r30, "topics"."featured_user4_id" AS t0_r31, "topics"."notify_moderators_count" AS t0_r32, "topics"."spam_count" AS t0_r33, "topics"."illegal_count" AS t0_r34, "topics"."inappropriate_count" AS t0_r35, "topics"."pinned_at" AS t0_r36, "topics"."score" AS t0_r37, "topics"."percent_rank" AS t0_r38, "topics"."notify_user_count" AS t0_r39, "topics"."subtype" AS t0_r40, "topics"."slug" AS t0_r41, "topics"."auto_close_at" AS t0_r42, "topics"."auto_close_user_id" AS t0_r43, "topics"."auto_close_started_at" AS t0_r44, "topics"."deleted_by_id" AS t0_r45, "topics"."participant_count" AS t0_r46, "topics"."word_count" AS t0_r47, "topics"."excerpt" AS t0_r48, "topics"."pinned_globally" AS t0_r49, "categories"."id" AS t1_r0, "categories"."name" AS t1_r1, "categories"."color" AS t1_r2, "categories"."topic_id" AS t1_r3, "categories"."topic_count" AS t1_r4, "categories"."created_at" AS t1_r5, "categories"."updated_at" AS t1_r6, "categories"."user_id" AS t1_r7, "categories"."topics_year" AS t1_r8, "categories"."topics_month" AS t1_r9, "categories"."topics_week" AS t1_r10, "categories"."slug" AS t1_r11, "categories"."description" AS t1_r12, "categories"."text_color" AS t1_r13, "categories"."read_restricted" AS t1_r14, "categories"."auto_close_hours" AS t1_r15, "categories"."post_count" AS t1_r16, "categories"."latest_post_id" AS t1_r17, "categories"."latest_topic_id" AS t1_r18, "categories"."position" AS t1_r19, "categories"."parent_category_id" AS t1_r20, "categories"."posts_year" AS t1_r21, "categories"."posts_month" AS t1_r22, "categories"."posts_week" AS t1_r23, "categories"."email_in" AS t1_r24, "categories"."email_in_allow_strangers" AS t1_r25, "categories"."topics_day" AS t1_r26, "categories"."posts_day" AS t1_r27, "categories"."logo_url" AS t1_r28, "categories"."background_url" AS t1_r29, "categories"."allow_badges" AS t1_r30, "topic_only_relative_urls_categories"."id" AS t2_r0, "topic_only_relative_urls_categories"."title" AS t2_r1, "topic_only_relative_urls_categories"."last_posted_at" AS t2_r2, "topic_only_relative_urls_categories"."created_at" AS t2_r3, "topic_only_relative_urls_categories"."updated_at" AS t2_r4, "topic_only_relative_urls_categories"."views" AS t2_r5, "topic_only_relative_urls_categories"."posts_count" AS t2_r6, "topic_only_relative_urls_categories"."user_id" AS t2_r7, "topic_only_relative_urls_categories"."last_post_user_id" AS t2_r8, "topic_only_relative_urls_categories"."reply_count" AS t2_r9, "topic_only_relative_urls_categories"."featured_user1_id" AS t2_r10, "topic_only_relative_urls_categories"."featured_user2_id" AS t2_r11, "topic_only_relative_urls_categories"."featured_user3_id" AS t2_r12, "topic_only_relative_urls_categories"."avg_time" AS t2_r13, "topic_only_relative_urls_categories"."deleted_at" AS t2_r14, "topic_only_relative_urls_categories"."highest_post_number" AS t2_r15, "topic_only_relative_urls_categories"."image_url" AS t2_r16, "topic_only_relative_urls_categories"."off_topic_count" AS t2_r17, "topic_only_relative_urls_categories"."like_count" AS t2_r18, "topic_only_relative_urls_categories"."incoming_link_count" AS t2_r19, "topic_only_relative_urls_categories"."bookmark_count" AS t2_r20, "topic_only_relative_urls_categories"."star_count" AS t2_r21, "topic_only_relative_urls_categories"."category_id" AS t2_r22, "topic_only_relative_urls_categories"."visible" AS t2_r23, "topic_only_relative_urls_categories"."moderator_posts_count" AS t2_r24, "topic_only_relative_urls_categories"."closed" AS t2_r25, "topic_only_relative_urls_categories"."archived" AS t2_r26, "topic_only_relative_urls_categories"."bumped_at" AS t2_r27, "topic_only_relative_urls_categories"."has_summary" AS t2_r28, "topic_only_relative_urls_categories"."vote_count" AS t2_r29, "topic_only_relative_urls_categories"."archetype" AS t2_r30, "topic_only_relative_urls_categories"."featured_user4_id" AS t2_r31, "topic_only_relative_urls_categories"."notify_moderators_count" AS t2_r32, "topic_only_relative_urls_categories"."spam_count" AS t2_r33, "topic_only_relative_urls_categories"."illegal_count" AS t2_r34, "topic_only_relative_urls_categories"."inappropriate_count" AS t2_r35, "topic_only_relative_urls_categories"."pinned_at" AS t2_r36, "topic_only_relative_urls_categories"."score" AS t2_r37, "topic_only_relative_urls_categories"."percent_rank" AS t2_r38, "topic_only_relative_urls_categories"."notify_user_count" AS t2_r39, "topic_only_relative_urls_categories"."subtype" AS t2_r40, "topic_only_relative_urls_categories"."slug" AS t2_r41, "topic_only_relative_urls_categories"."auto_close_at" AS t2_r42, "topic_only_relative_urls_categories"."auto_close_user_id" AS t2_r43, "topic_only_relative_urls_categories"."auto_close_started_at" AS t2_r44, "topic_only_relative_urls_categories"."deleted_by_id" AS t2_r45, "topic_only_relative_urls_categories"."participant_count" AS t2_r46, "topic_only_relative_urls_categories"."word_count" AS t2_r47, "topic_only_relative_urls_categories"."excerpt" AS t2_r48, "topic_only_relative_urls_categories"."pinned_globally" AS t2_r49 FROM "topics" LEFT OUTER JOIN "categories" ON "categories"."id" = "topics"."category_id" LEFT OUTER JOIN "topics" "topic_only_relative_urls_categories" ON "topic_only_relative_urls_categories"."id" = "categories"."topic_id" AND ("topic_only_relative_urls_categories"."deleted_at" IS NULL) WHERE ("topics"."deleted_at" IS NULL) AND (topics.archetype <> 'private_message') AND (COALESCE(categories.topic_id, 0) <> topics.id) AND "topics"."visible" = 't' AND (topics.category_id IS NULL or topics.category_id IN (1,3))  ORDER BY CASE WHEN topics.pinned_globally and (topics.pinned_at IS NOT NULL) THEN 0 ELSE 1 END, topics.bumped_at DESC LIMIT 30
;
\x auto
SELECT  "topics"."id" AS t0_r0, "topics"."title" AS t0_r1, "topics"."last_posted_at" AS t0_r2, "topics"."created_at" AS t0_r3, "topics"."updated_at" AS t0_r4, "topics"."views" AS t0_r5, "topics"."posts_count" AS t0_r6, "topics"."user_id" AS t0_r7, "topics"."last_post_user_id" AS t0_r8, "topics"."reply_count" AS t0_r9, "topics"."featured_user1_id" AS t0_r10, "topics"."featured_user2_id" AS t0_r11, "topics"."featured_user3_id" AS t0_r12, "topics"."avg_time" AS t0_r13, "topics"."deleted_at" AS t0_r14, "topics"."highest_post_number" AS t0_r15, "topics"."image_url" AS t0_r16, "topics"."off_topic_count" AS t0_r17, "topics"."like_count" AS t0_r18, "topics"."incoming_link_count" AS t0_r19, "topics"."bookmark_count" AS t0_r20, "topics"."star_count" AS t0_r21, "topics"."category_id" AS t0_r22, "topics"."visible" AS t0_r23, "topics"."moderator_posts_count" AS t0_r24, "topics"."closed" AS t0_r25, "topics"."archived" AS t0_r26, "topics"."bumped_at" AS t0_r27, "topics"."has_summary" AS t0_r28, "topics"."vote_count" AS t0_r29, "topics"."archetype" AS t0_r30, "topics"."featured_user4_id" AS t0_r31, "topics"."notify_moderators_count" AS t0_r32, "topics"."spam_count" AS t0_r33, "topics"."illegal_count" AS t0_r34, "topics"."inappropriate_count" AS t0_r35, "topics"."pinned_at" AS t0_r36, "topics"."score" AS t0_r37, "topics"."percent_rank" AS t0_r38, "topics"."notify_user_count" AS t0_r39, "topics"."subtype" AS t0_r40, "topics"."slug" AS t0_r41, "topics"."auto_close_at" AS t0_r42, "topics"."auto_close_user_id" AS t0_r43, "topics"."auto_close_started_at" AS t0_r44, "topics"."deleted_by_id" AS t0_r45, "topics"."participant_count" AS t0_r46, "topics"."word_count" AS t0_r47, "topics"."excerpt" AS t0_r48, "topics"."pinned_globally" AS t0_r49, "categories"."id" AS t1_r0, "categories"."name" AS t1_r1, "categories"."color" AS t1_r2, "categories"."topic_id" AS t1_r3, "categories"."topic_count" AS t1_r4, "categories"."created_at" AS t1_r5, "categories"."updated_at" AS t1_r6, "categories"."user_id" AS t1_r7, "categories"."topics_year" AS t1_r8, "categories"."topics_month" AS t1_r9, "categories"."topics_week" AS t1_r10, "categories"."slug" AS t1_r11, "categories"."description" AS t1_r12, "categories"."text_color" AS t1_r13, "categories"."read_restricted" AS t1_r14, "categories"."auto_close_hours" AS t1_r15, "categories"."post_count" AS t1_r16, "categories"."latest_post_id" AS t1_r17, "categories"."latest_topic_id" AS t1_r18, "categories"."position" AS t1_r19, "categories"."parent_category_id" AS t1_r20, "categories"."posts_year" AS t1_r21, "categories"."posts_month" AS t1_r22, "categories"."posts_week" AS t1_r23, "categories"."email_in" AS t1_r24, "categories"."email_in_allow_strangers" AS t1_r25, "categories"."topics_day" AS t1_r26, "categories"."posts_day" AS t1_r27, "categories"."logo_url" AS t1_r28, "categories"."background_url" AS t1_r29, "categories"."allow_badges" AS t1_r30, "topic_only_relative_urls_categories"."id" AS t2_r0, "topic_only_relative_urls_categories"."title" AS t2_r1, "topic_only_relative_urls_categories"."last_posted_at" AS t2_r2, "topic_only_relative_urls_categories"."created_at" AS t2_r3, "topic_only_relative_urls_categories"."updated_at" AS t2_r4, "topic_only_relative_urls_categories"."views" AS t2_r5, "topic_only_relative_urls_categories"."posts_count" AS t2_r6, "topic_only_relative_urls_categories"."user_id" AS t2_r7, "topic_only_relative_urls_categories"."last_post_user_id" AS t2_r8, "topic_only_relative_urls_categories"."reply_count" AS t2_r9, "topic_only_relative_urls_categories"."featured_user1_id" AS t2_r10, "topic_only_relative_urls_categories"."featured_user2_id" AS t2_r11, "topic_only_relative_urls_categories"."featured_user3_id" AS t2_r12, "topic_only_relative_urls_categories"."avg_time" AS t2_r13, "topic_only_relative_urls_categories"."deleted_at" AS t2_r14, "topic_only_relative_urls_categories"."highest_post_number" AS t2_r15, "topic_only_relative_urls_categories"."image_url" AS t2_r16, "topic_only_relative_urls_categories"."off_topic_count" AS t2_r17, "topic_only_relative_urls_categories"."like_count" AS t2_r18, "topic_only_relative_urls_categories"."incoming_link_count" AS t2_r19, "topic_only_relative_urls_categories"."bookmark_count" AS t2_r20, "topic_only_relative_urls_categories"."star_count" AS t2_r21, "topic_only_relative_urls_categories"."category_id" AS t2_r22, "topic_only_relative_urls_categories"."visible" AS t2_r23, "topic_only_relative_urls_categories"."moderator_posts_count" AS t2_r24, "topic_only_relative_urls_categories"."closed" AS t2_r25, "topic_only_relative_urls_categories"."archived" AS t2_r26, "topic_only_relative_urls_categories"."bumped_at" AS t2_r27, "topic_only_relative_urls_categories"."has_summary" AS t2_r28, "topic_only_relative_urls_categories"."vote_count" AS t2_r29, "topic_only_relative_urls_categories"."archetype" AS t2_r30, "topic_only_relative_urls_categories"."featured_user4_id" AS t2_r31, "topic_only_relative_urls_categories"."notify_moderators_count" AS t2_r32, "topic_only_relative_urls_categories"."spam_count" AS t2_r33, "topic_only_relative_urls_categories"."illegal_count" AS t2_r34, "topic_only_relative_urls_categories"."inappropriate_count" AS t2_r35, "topic_only_relative_urls_categories"."pinned_at" AS t2_r36, "topic_only_relative_urls_categories"."score" AS t2_r37, "topic_only_relative_urls_categories"."percent_rank" AS t2_r38, "topic_only_relative_urls_categories"."notify_user_count" AS t2_r39, "topic_only_relative_urls_categories"."subtype" AS t2_r40, "topic_only_relative_urls_categories"."slug" AS t2_r41, "topic_only_relative_urls_categories"."auto_close_at" AS t2_r42, "topic_only_relative_urls_categories"."auto_close_user_id" AS t2_r43, "topic_only_relative_urls_categories"."auto_close_started_at" AS t2_r44, "topic_only_relative_urls_categories"."deleted_by_id" AS t2_r45, "topic_only_relative_urls_categories"."participant_count" AS t2_r46, "topic_only_relative_urls_categories"."word_count" AS t2_r47, "topic_only_relative_urls_categories"."excerpt" AS t2_r48, "topic_only_relative_urls_categories"."pinned_globally" AS t2_r49 FROM "topics" LEFT OUTER JOIN "categories" ON "categories"."id" = "topics"."category_id" LEFT OUTER JOIN "topics" "topic_only_relative_urls_categories" ON "topic_only_relative_urls_categories"."id" = "categories"."topic_id" AND ("topic_only_relative_urls_categories"."deleted_at" IS NULL) WHERE ("topics"."deleted_at" IS NULL) AND (topics.archetype <> 'private_message') AND (COALESCE(categories.topic_id, 0) <> topics.id) AND "topics"."visible" = 't' AND (topics.category_id IS NULL or topics.category_id IN (1,3))  ORDER BY CASE WHEN topics.pinned_globally and (topics.pinned_at IS NOT NULL) THEN 0 ELSE 1 END, topics.bumped_at DESC LIMIT 30
;
EXPLAIN ANALYZE SELECT  "topics"."id" AS t0_r0, "topics"."title" AS t0_r1, "topics"."last_posted_at" AS t0_r2, "topics"."created_at" AS t0_r3, "topics"."updated_at" AS t0_r4, "topics"."views" AS t0_r5, "topics"."posts_count" AS t0_r6, "topics"."user_id" AS t0_r7, "topics"."last_post_user_id" AS t0_r8, "topics"."reply_count" AS t0_r9, "topics"."featured_user1_id" AS t0_r10, "topics"."featured_user2_id" AS t0_r11, "topics"."featured_user3_id" AS t0_r12, "topics"."avg_time" AS t0_r13, "topics"."deleted_at" AS t0_r14, "topics"."highest_post_number" AS t0_r15, "topics"."image_url" AS t0_r16, "topics"."off_topic_count" AS t0_r17, "topics"."like_count" AS t0_r18, "topics"."incoming_link_count" AS t0_r19, "topics"."bookmark_count" AS t0_r20, "topics"."star_count" AS t0_r21, "topics"."category_id" AS t0_r22, "topics"."visible" AS t0_r23, "topics"."moderator_posts_count" AS t0_r24, "topics"."closed" AS t0_r25, "topics"."archived" AS t0_r26, "topics"."bumped_at" AS t0_r27, "topics"."has_summary" AS t0_r28, "topics"."vote_count" AS t0_r29, "topics"."archetype" AS t0_r30, "topics"."featured_user4_id" AS t0_r31, "topics"."notify_moderators_count" AS t0_r32, "topics"."spam_count" AS t0_r33, "topics"."illegal_count" AS t0_r34, "topics"."inappropriate_count" AS t0_r35, "topics"."pinned_at" AS t0_r36, "topics"."score" AS t0_r37, "topics"."percent_rank" AS t0_r38, "topics"."notify_user_count" AS t0_r39, "topics"."subtype" AS t0_r40, "topics"."slug" AS t0_r41, "topics"."auto_close_at" AS t0_r42, "topics"."auto_close_user_id" AS t0_r43, "topics"."auto_close_started_at" AS t0_r44, "topics"."deleted_by_id" AS t0_r45, "topics"."participant_count" AS t0_r46, "topics"."word_count" AS t0_r47, "topics"."excerpt" AS t0_r48, "topics"."pinned_globally" AS t0_r49, "categories"."id" AS t1_r0, "categories"."name" AS t1_r1, "categories"."color" AS t1_r2, "categories"."topic_id" AS t1_r3, "categories"."topic_count" AS t1_r4, "categories"."created_at" AS t1_r5, "categories"."updated_at" AS t1_r6, "categories"."user_id" AS t1_r7, "categories"."topics_year" AS t1_r8, "categories"."topics_month" AS t1_r9, "categories"."topics_week" AS t1_r10, "categories"."slug" AS t1_r11, "categories"."description" AS t1_r12, "categories"."text_color" AS t1_r13, "categories"."read_restricted" AS t1_r14, "categories"."auto_close_hours" AS t1_r15, "categories"."post_count" AS t1_r16, "categories"."latest_post_id" AS t1_r17, "categories"."latest_topic_id" AS t1_r18, "categories"."position" AS t1_r19, "categories"."parent_category_id" AS t1_r20, "categories"."posts_year" AS t1_r21, "categories"."posts_month" AS t1_r22, "categories"."posts_week" AS t1_r23, "categories"."email_in" AS t1_r24, "categories"."email_in_allow_strangers" AS t1_r25, "categories"."topics_day" AS t1_r26, "categories"."posts_day" AS t1_r27, "categories"."logo_url" AS t1_r28, "categories"."background_url" AS t1_r29, "categories"."allow_badges" AS t1_r30, "topic_only_relative_urls_categories"."id" AS t2_r0, "topic_only_relative_urls_categories"."title" AS t2_r1, "topic_only_relative_urls_categories"."last_posted_at" AS t2_r2, "topic_only_relative_urls_categories"."created_at" AS t2_r3, "topic_only_relative_urls_categories"."updated_at" AS t2_r4, "topic_only_relative_urls_categories"."views" AS t2_r5, "topic_only_relative_urls_categories"."posts_count" AS t2_r6, "topic_only_relative_urls_categories"."user_id" AS t2_r7, "topic_only_relative_urls_categories"."last_post_user_id" AS t2_r8, "topic_only_relative_urls_categories"."reply_count" AS t2_r9, "topic_only_relative_urls_categories"."featured_user1_id" AS t2_r10, "topic_only_relative_urls_categories"."featured_user2_id" AS t2_r11, "topic_only_relative_urls_categories"."featured_user3_id" AS t2_r12, "topic_only_relative_urls_categories"."avg_time" AS t2_r13, "topic_only_relative_urls_categories"."deleted_at" AS t2_r14, "topic_only_relative_urls_categories"."highest_post_number" AS t2_r15, "topic_only_relative_urls_categories"."image_url" AS t2_r16, "topic_only_relative_urls_categories"."off_topic_count" AS t2_r17, "topic_only_relative_urls_categories"."like_count" AS t2_r18, "topic_only_relative_urls_categories"."incoming_link_count" AS t2_r19, "topic_only_relative_urls_categories"."bookmark_count" AS t2_r20, "topic_only_relative_urls_categories"."star_count" AS t2_r21, "topic_only_relative_urls_categories"."category_id" AS t2_r22, "topic_only_relative_urls_categories"."visible" AS t2_r23, "topic_only_relative_urls_categories"."moderator_posts_count" AS t2_r24, "topic_only_relative_urls_categories"."closed" AS t2_r25, "topic_only_relative_urls_categories"."archived" AS t2_r26, "topic_only_relative_urls_categories"."bumped_at" AS t2_r27, "topic_only_relative_urls_categories"."has_summary" AS t2_r28, "topic_only_relative_urls_categories"."vote_count" AS t2_r29, "topic_only_relative_urls_categories"."archetype" AS t2_r30, "topic_only_relative_urls_categories"."featured_user4_id" AS t2_r31, "topic_only_relative_urls_categories"."notify_moderators_count" AS t2_r32, "topic_only_relative_urls_categories"."spam_count" AS t2_r33, "topic_only_relative_urls_categories"."illegal_count" AS t2_r34, "topic_only_relative_urls_categories"."inappropriate_count" AS t2_r35, "topic_only_relative_urls_categories"."pinned_at" AS t2_r36, "topic_only_relative_urls_categories"."score" AS t2_r37, "topic_only_relative_urls_categories"."percent_rank" AS t2_r38, "topic_only_relative_urls_categories"."notify_user_count" AS t2_r39, "topic_only_relative_urls_categories"."subtype" AS t2_r40, "topic_only_relative_urls_categories"."slug" AS t2_r41, "topic_only_relative_urls_categories"."auto_close_at" AS t2_r42, "topic_only_relative_urls_categories"."auto_close_user_id" AS t2_r43, "topic_only_relative_urls_categories"."auto_close_started_at" AS t2_r44, "topic_only_relative_urls_categories"."deleted_by_id" AS t2_r45, "topic_only_relative_urls_categories"."participant_count" AS t2_r46, "topic_only_relative_urls_categories"."word_count" AS t2_r47, "topic_only_relative_urls_categories"."excerpt" AS t2_r48, "topic_only_relative_urls_categories"."pinned_globally" AS t2_r49 FROM "topics" LEFT OUTER JOIN "categories" ON "categories"."id" = "topics"."category_id" LEFT OUTER JOIN "topics" "topic_only_relative_urls_categories" ON "topic_only_relative_urls_categories"."id" = "categories"."topic_id" AND ("topic_only_relative_urls_categories"."deleted_at" IS NULL) WHERE ("topics"."deleted_at" IS NULL) AND (topics.archetype <> 'private_message') AND (COALESCE(categories.topic_id, 0) <> topics.id) AND "topics"."visible" = 't' AND (topics.category_id IS NULL or topics.category_id IN (1,3))  ORDER BY CASE WHEN topics.pinned_globally and (topics.pinned_at IS NOT NULL) THEN 0 ELSE 1 END, topics.bumped_at DESC LIMIT 30
;
\d
SELECT * FROM users;
\d users
SELECT  "topics".* FROM "topics"  WHERE ("topics"."deleted_at" IS NULL) AND "topics"."id" = 8  ORDER BY "topics"."id" ASC LIMIT 1;
EXPLAIN ANALYZE SELECT  "topics".* FROM "topics"  WHERE ("topics"."deleted_at" IS NULL) AND "topics"."id" = 8  ORDER BY "topics"."id" ASC LIMIT 1;
\d topics
SELECT "categories".* FROM "categories"  WHERE "categories"."id" IN (1);
EXPLAIN ANALYZE SELECT "categories".* FROM "categories"  WHERE "categories"."id" IN (1);
SELECT * FROM categories;
EXPLAIN ANALYZE SELECT "categories".* FROM "categories"  WHERE "categories"."id" IN (1);
SELECT "categories".* FROM "categories"  WHERE "categories"."id" IN (1);
EXPLAIN ANALYZE SELECT  "topics".* FROM "topics"  WHERE ("topics"."deleted_at" IS NULL) AND "topics"."id" = 8  ORDER BY "topics"."id" ASC LIMIT 1;
SELECT  "topics".* FROM "topics"  WHERE ("topics"."deleted_at" IS NULL) AND "topics"."id" = 8  ORDER BY "topics"."id" ASC LIMIT 1;
SELECT  "topics".* FROM "topics"  WHERE ("topics"."deleted_at" IS NULL) AND "topics"."id" = 8  ORDER BY "topics"."id" ASC LIMIT 1;
\d topics
\d posts;
SELECT * FROM posts;
SELECT ftl.url,
                     COALESCE(ft.title, ftl.title) AS title,
                     ftl.link_topic_id,
                     ftl.reflection,
                     ftl.internal,
                     ftl.domain,
                     MIN(ftl.user_id) AS user_id,
                     SUM(clicks) AS clicks
              FROM topic_links AS ftl
              LEFT JOIN topics AS ft ON ftl.link_topic_id = ft.id
              LEFT JOIN categories AS c ON c.id = ft.category_id
              WHERE (ftl.topic_id = 8) AND (ft.deleted_at IS NULL) AND (COALESCE(ft.archetype, 'regular') <> 'private_message') AND (NOT COALESCE(c.read_restricted, false))
              GROUP BY ftl.url, ft.title, ftl.title, ftl.link_topic_id, ftl.reflection, ftl.internal, ftl.domain
              ORDER BY clicks DESC;
EXPLAIN ANALYZE SELECT ftl.url,
                     COALESCE(ft.title, ftl.title) AS title,
                     ftl.link_topic_id,
                     ftl.reflection,
                     ftl.internal,
                     ftl.domain,
                     MIN(ftl.user_id) AS user_id,
                     SUM(clicks) AS clicks
              FROM topic_links AS ftl
              LEFT JOIN topics AS ft ON ftl.link_topic_id = ft.id
              LEFT JOIN categories AS c ON c.id = ft.category_id
              WHERE (ftl.topic_id = 8) AND (ft.deleted_at IS NULL) AND (COALESCE(ft.archetype, 'regular') <> 'private_message') AND (NOT COALESCE(c.read_restricted, false))
              GROUP BY ftl.url, ft.title, ftl.title, ftl.link_topic_id, ftl.reflection, ftl.internal, ftl.domain
              ORDER BY clicks DESC;
SELECT "users".* FROM "users"  WHERE "users"."username_lower" = 'xfix';
SELECT * FROM users;
\d users
SELECT "categories"."id" FROM "categories"  WHERE (categories.id in (
            SELECT c.id FROM categories c
              WHERE (
                  NOT c.read_restricted AND
                  (
                    NOT EXISTS(
                      SELECT 1 FROM category_groups cg WHERE cg.category_id = categories.id )
                    ) OR EXISTS(
                      SELECT 1 FROM category_groups cg
                        WHERE permission_type in (1) AND
                        cg.category_id = categories.id AND
                        group_id IN (
                          SELECT g.group_id FROM group_users g where g.user_id = 1 UNION SELECT 0
                        )
                    )
                  )
            ));
EXPLAIN ANALYZE SELECT "categories"."id" FROM "categories"  WHERE (categories.id in (
            SELECT c.id FROM categories c
              WHERE (
                  NOT c.read_restricted AND
                  (
                    NOT EXISTS(
                      SELECT 1 FROM category_groups cg WHERE cg.category_id = categories.id )
                    ) OR EXISTS(
                      SELECT 1 FROM category_groups cg
                        WHERE permission_type in (1) AND
                        cg.category_id = categories.id AND
                        group_id IN (
                          SELECT g.group_id FROM group_users g where g.user_id = 1 UNION SELECT 0
                        )
                    )
                  )
            ));
SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1;
\x auto
SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1;
EXPLAIN ANALYZE SELECT  "users".* FROM "users"   ORDER BY "users"."id" DESC LIMIT 1;
SELECT  "topics"."id" AS t0_r0, "topics"."title" AS t0_r1, "topics"."last_posted_at" AS t0_r2, "topics"."created_at" AS t0_r3, "topics"."updated_at" AS t0_r4, "topics"."views" AS t0_r5, "topics"."posts_count" AS t0_r6, "topics"."user_id" AS t0_r7, "topics"."last_post_user_id" AS t0_r8, "topics"."reply_count" AS t0_r9, "topics"."featured_user1_id" AS t0_r10, "topics"."featured_user2_id" AS t0_r11, "topics"."featured_user3_id" AS t0_r12, "topics"."avg_time" AS t0_r13, "topics"."deleted_at" AS t0_r14, "topics"."highest_post_number" AS t0_r15, "topics"."image_url" AS t0_r16, "topics"."off_topic_count" AS t0_r17, "topics"."like_count" AS t0_r18, "topics"."incoming_link_count" AS t0_r19, "topics"."bookmark_count" AS t0_r20, "topics"."star_count" AS t0_r21, "topics"."category_id" AS t0_r22, "topics"."visible" AS t0_r23, "topics"."moderator_posts_count" AS t0_r24, "topics"."closed" AS t0_r25, "topics"."archived" AS t0_r26, "topics"."bumped_at" AS t0_r27, "topics"."has_summary" AS t0_r28, "topics"."vote_count" AS t0_r29, "topics"."archetype" AS t0_r30, "topics"."featured_user4_id" AS t0_r31, "topics"."notify_moderators_count" AS t0_r32, "topics"."spam_count" AS t0_r33, "topics"."illegal_count" AS t0_r34, "topics"."inappropriate_count" AS t0_r35, "topics"."pinned_at" AS t0_r36, "topics"."score" AS t0_r37, "topics"."percent_rank" AS t0_r38, "topics"."notify_user_count" AS t0_r39, "topics"."subtype" AS t0_r40, "topics"."slug" AS t0_r41, "topics"."auto_close_at" AS t0_r42, "topics"."auto_close_user_id" AS t0_r43, "topics"."auto_close_started_at" AS t0_r44, "topics"."deleted_by_id" AS t0_r45, "topics"."participant_count" AS t0_r46, "topics"."word_count" AS t0_r47, "topics"."excerpt" AS t0_r48, "topics"."pinned_globally" AS t0_r49, "categories"."id" AS t1_r0, "categories"."name" AS t1_r1, "categories"."color" AS t1_r2, "categories"."topic_id" AS t1_r3, "categories"."topic_count" AS t1_r4, "categories"."created_at" AS t1_r5, "categories"."updated_at" AS t1_r6, "categories"."user_id" AS t1_r7, "categories"."topics_year" AS t1_r8, "categories"."topics_month" AS t1_r9, "categories"."topics_week" AS t1_r10, "categories"."slug" AS t1_r11, "categories"."description" AS t1_r12, "categories"."text_color" AS t1_r13, "categories"."read_restricted" AS t1_r14, "categories"."auto_close_hours" AS t1_r15, "categories"."post_count" AS t1_r16, "categories"."latest_post_id" AS t1_r17, "categories"."latest_topic_id" AS t1_r18, "categories"."position" AS t1_r19, "categories"."parent_category_id" AS t1_r20, "categories"."posts_year" AS t1_r21, "categories"."posts_month" AS t1_r22, "categories"."posts_week" AS t1_r23, "categories"."email_in" AS t1_r24, "categories"."email_in_allow_strangers" AS t1_r25, "categories"."topics_day" AS t1_r26, "categories"."posts_day" AS t1_r27, "categories"."logo_url" AS t1_r28, "categories"."background_url" AS t1_r29, "categories"."allow_badges" AS t1_r30, "topic_only_relative_urls_categories"."id" AS t2_r0, "topic_only_relative_urls_categories"."title" AS t2_r1, "topic_only_relative_urls_categories"."last_posted_at" AS t2_r2, "topic_only_relative_urls_categories"."created_at" AS t2_r3, "topic_only_relative_urls_categories"."updated_at" AS t2_r4, "topic_only_relative_urls_categories"."views" AS t2_r5, "topic_only_relative_urls_categories"."posts_count" AS t2_r6, "topic_only_relative_urls_categories"."user_id" AS t2_r7, "topic_only_relative_urls_categories"."last_post_user_id" AS t2_r8, "topic_only_relative_urls_categories"."reply_count" AS t2_r9, "topic_only_relative_urls_categories"."featured_user1_id" AS t2_r10, "topic_only_relative_urls_categories"."featured_user2_id" AS t2_r11, "topic_only_relative_urls_categories"."featured_user3_id" AS t2_r12, "topic_only_relative_urls_categories"."avg_time" AS t2_r13, "topic_only_relative_urls_categories"."deleted_at" AS t2_r14, "topic_only_relative_urls_categories"."highest_post_number" AS t2_r15, "topic_only_relative_urls_categories"."image_url" AS t2_r16, "topic_only_relative_urls_categories"."off_topic_count" AS t2_r17, "topic_only_relative_urls_categories"."like_count" AS t2_r18, "topic_only_relative_urls_categories"."incoming_link_count" AS t2_r19, "topic_only_relative_urls_categories"."bookmark_count" AS t2_r20, "topic_only_relative_urls_categories"."star_count" AS t2_r21, "topic_only_relative_urls_categories"."category_id" AS t2_r22, "topic_only_relative_urls_categories"."visible" AS t2_r23, "topic_only_relative_urls_categories"."moderator_posts_count" AS t2_r24, "topic_only_relative_urls_categories"."closed" AS t2_r25, "topic_only_relative_urls_categories"."archived" AS t2_r26, "topic_only_relative_urls_categories"."bumped_at" AS t2_r27, "topic_only_relative_urls_categories"."has_summary" AS t2_r28, "topic_only_relative_urls_categories"."vote_count" AS t2_r29, "topic_only_relative_urls_categories"."archetype" AS t2_r30, "topic_only_relative_urls_categories"."featured_user4_id" AS t2_r31, "topic_only_relative_urls_categories"."notify_moderators_count" AS t2_r32, "topic_only_relative_urls_categories"."spam_count" AS t2_r33, "topic_only_relative_urls_categories"."illegal_count" AS t2_r34, "topic_only_relative_urls_categories"."inappropriate_count" AS t2_r35, "topic_only_relative_urls_categories"."pinned_at" AS t2_r36, "topic_only_relative_urls_categories"."score" AS t2_r37, "topic_only_relative_urls_categories"."percent_rank" AS t2_r38, "topic_only_relative_urls_categories"."notify_user_count" AS t2_r39, "topic_only_relative_urls_categories"."subtype" AS t2_r40, "topic_only_relative_urls_categories"."slug" AS t2_r41, "topic_only_relative_urls_categories"."auto_close_at" AS t2_r42, "topic_only_relative_urls_categories"."auto_close_user_id" AS t2_r43, "topic_only_relative_urls_categories"."auto_close_started_at" AS t2_r44, "topic_only_relative_urls_categories"."deleted_by_id" AS t2_r45, "topic_only_relative_urls_categories"."participant_count" AS t2_r46, "topic_only_relative_urls_categories"."word_count" AS t2_r47, "topic_only_relative_urls_categories"."excerpt" AS t2_r48, "topic_only_relative_urls_categories"."pinned_globally" AS t2_r49 FROM "topics" LEFT OUTER JOIN "categories" ON "categories"."id" = "topics"."category_id" LEFT OUTER JOIN "topics" "topic_only_relative_urls_categories" ON "topic_only_relative_urls_categories"."id" = "categories"."topic_id" AND ("topic_only_relative_urls_categories"."deleted_at" IS NULL) LEFT OUTER JOIN topic_users AS tu ON (topics.id = tu.topic_id AND tu.user_id = 1) WHERE ("topics"."deleted_at" IS NULL) AND (categories.id = 5 or (categories.parent_category_id = 5 AND categories.topic_id <> topics.id)) AND (topics.archetype <> 'private_message') AND (NOT EXISTS(
                         SELECT 1 FROM category_users cu
                         WHERE cu.user_id = 1 AND
                               cu.category_id = topics.category_id AND
                               cu.notification_level = 0 AND
                               cu.category_id <> 5
                         ))  ORDER BY CASE
        WHEN (COALESCE(topics.pinned_at, '2010-01-01') > COALESCE(tu.cleared_pinned_at, '2010-01-01'))
          THEN '3000-01-01'
        ELSE topics.bumped_at
       END DESC LIMIT 30   ;
EXPLAIN ANALYZE SELECT  "topics"."id" AS t0_r0, "topics"."title" AS t0_r1, "topics"."last_posted_at" AS t0_r2, "topics"."created_at" AS t0_r3, "topics"."updated_at" AS t0_r4, "topics"."views" AS t0_r5, "topics"."posts_count" AS t0_r6, "topics"."user_id" AS t0_r7, "topics"."last_post_user_id" AS t0_r8, "topics"."reply_count" AS t0_r9, "topics"."featured_user1_id" AS t0_r10, "topics"."featured_user2_id" AS t0_r11, "topics"."featured_user3_id" AS t0_r12, "topics"."avg_time" AS t0_r13, "topics"."deleted_at" AS t0_r14, "topics"."highest_post_number" AS t0_r15, "topics"."image_url" AS t0_r16, "topics"."off_topic_count" AS t0_r17, "topics"."like_count" AS t0_r18, "topics"."incoming_link_count" AS t0_r19, "topics"."bookmark_count" AS t0_r20, "topics"."star_count" AS t0_r21, "topics"."category_id" AS t0_r22, "topics"."visible" AS t0_r23, "topics"."moderator_posts_count" AS t0_r24, "topics"."closed" AS t0_r25, "topics"."archived" AS t0_r26, "topics"."bumped_at" AS t0_r27, "topics"."has_summary" AS t0_r28, "topics"."vote_count" AS t0_r29, "topics"."archetype" AS t0_r30, "topics"."featured_user4_id" AS t0_r31, "topics"."notify_moderators_count" AS t0_r32, "topics"."spam_count" AS t0_r33, "topics"."illegal_count" AS t0_r34, "topics"."inappropriate_count" AS t0_r35, "topics"."pinned_at" AS t0_r36, "topics"."score" AS t0_r37, "topics"."percent_rank" AS t0_r38, "topics"."notify_user_count" AS t0_r39, "topics"."subtype" AS t0_r40, "topics"."slug" AS t0_r41, "topics"."auto_close_at" AS t0_r42, "topics"."auto_close_user_id" AS t0_r43, "topics"."auto_close_started_at" AS t0_r44, "topics"."deleted_by_id" AS t0_r45, "topics"."participant_count" AS t0_r46, "topics"."word_count" AS t0_r47, "topics"."excerpt" AS t0_r48, "topics"."pinned_globally" AS t0_r49, "categories"."id" AS t1_r0, "categories"."name" AS t1_r1, "categories"."color" AS t1_r2, "categories"."topic_id" AS t1_r3, "categories"."topic_count" AS t1_r4, "categories"."created_at" AS t1_r5, "categories"."updated_at" AS t1_r6, "categories"."user_id" AS t1_r7, "categories"."topics_year" AS t1_r8, "categories"."topics_month" AS t1_r9, "categories"."topics_week" AS t1_r10, "categories"."slug" AS t1_r11, "categories"."description" AS t1_r12, "categories"."text_color" AS t1_r13, "categories"."read_restricted" AS t1_r14, "categories"."auto_close_hours" AS t1_r15, "categories"."post_count" AS t1_r16, "categories"."latest_post_id" AS t1_r17, "categories"."latest_topic_id" AS t1_r18, "categories"."position" AS t1_r19, "categories"."parent_category_id" AS t1_r20, "categories"."posts_year" AS t1_r21, "categories"."posts_month" AS t1_r22, "categories"."posts_week" AS t1_r23, "categories"."email_in" AS t1_r24, "categories"."email_in_allow_strangers" AS t1_r25, "categories"."topics_day" AS t1_r26, "categories"."posts_day" AS t1_r27, "categories"."logo_url" AS t1_r28, "categories"."background_url" AS t1_r29, "categories"."allow_badges" AS t1_r30, "topic_only_relative_urls_categories"."id" AS t2_r0, "topic_only_relative_urls_categories"."title" AS t2_r1, "topic_only_relative_urls_categories"."last_posted_at" AS t2_r2, "topic_only_relative_urls_categories"."created_at" AS t2_r3, "topic_only_relative_urls_categories"."updated_at" AS t2_r4, "topic_only_relative_urls_categories"."views" AS t2_r5, "topic_only_relative_urls_categories"."posts_count" AS t2_r6, "topic_only_relative_urls_categories"."user_id" AS t2_r7, "topic_only_relative_urls_categories"."last_post_user_id" AS t2_r8, "topic_only_relative_urls_categories"."reply_count" AS t2_r9, "topic_only_relative_urls_categories"."featured_user1_id" AS t2_r10, "topic_only_relative_urls_categories"."featured_user2_id" AS t2_r11, "topic_only_relative_urls_categories"."featured_user3_id" AS t2_r12, "topic_only_relative_urls_categories"."avg_time" AS t2_r13, "topic_only_relative_urls_categories"."deleted_at" AS t2_r14, "topic_only_relative_urls_categories"."highest_post_number" AS t2_r15, "topic_only_relative_urls_categories"."image_url" AS t2_r16, "topic_only_relative_urls_categories"."off_topic_count" AS t2_r17, "topic_only_relative_urls_categories"."like_count" AS t2_r18, "topic_only_relative_urls_categories"."incoming_link_count" AS t2_r19, "topic_only_relative_urls_categories"."bookmark_count" AS t2_r20, "topic_only_relative_urls_categories"."star_count" AS t2_r21, "topic_only_relative_urls_categories"."category_id" AS t2_r22, "topic_only_relative_urls_categories"."visible" AS t2_r23, "topic_only_relative_urls_categories"."moderator_posts_count" AS t2_r24, "topic_only_relative_urls_categories"."closed" AS t2_r25, "topic_only_relative_urls_categories"."archived" AS t2_r26, "topic_only_relative_urls_categories"."bumped_at" AS t2_r27, "topic_only_relative_urls_categories"."has_summary" AS t2_r28, "topic_only_relative_urls_categories"."vote_count" AS t2_r29, "topic_only_relative_urls_categories"."archetype" AS t2_r30, "topic_only_relative_urls_categories"."featured_user4_id" AS t2_r31, "topic_only_relative_urls_categories"."notify_moderators_count" AS t2_r32, "topic_only_relative_urls_categories"."spam_count" AS t2_r33, "topic_only_relative_urls_categories"."illegal_count" AS t2_r34, "topic_only_relative_urls_categories"."inappropriate_count" AS t2_r35, "topic_only_relative_urls_categories"."pinned_at" AS t2_r36, "topic_only_relative_urls_categories"."score" AS t2_r37, "topic_only_relative_urls_categories"."percent_rank" AS t2_r38, "topic_only_relative_urls_categories"."notify_user_count" AS t2_r39, "topic_only_relative_urls_categories"."subtype" AS t2_r40, "topic_only_relative_urls_categories"."slug" AS t2_r41, "topic_only_relative_urls_categories"."auto_close_at" AS t2_r42, "topic_only_relative_urls_categories"."auto_close_user_id" AS t2_r43, "topic_only_relative_urls_categories"."auto_close_started_at" AS t2_r44, "topic_only_relative_urls_categories"."deleted_by_id" AS t2_r45, "topic_only_relative_urls_categories"."participant_count" AS t2_r46, "topic_only_relative_urls_categories"."word_count" AS t2_r47, "topic_only_relative_urls_categories"."excerpt" AS t2_r48, "topic_only_relative_urls_categories"."pinned_globally" AS t2_r49 FROM "topics" LEFT OUTER JOIN "categories" ON "categories"."id" = "topics"."category_id" LEFT OUTER JOIN "topics" "topic_only_relative_urls_categories" ON "topic_only_relative_urls_categories"."id" = "categories"."topic_id" AND ("topic_only_relative_urls_categories"."deleted_at" IS NULL) LEFT OUTER JOIN topic_users AS tu ON (topics.id = tu.topic_id AND tu.user_id = 1) WHERE ("topics"."deleted_at" IS NULL) AND (categories.id = 5 or (categories.parent_category_id = 5 AND categories.topic_id <> topics.id)) AND (topics.archetype <> 'private_message') AND (NOT EXISTS(
                         SELECT 1 FROM category_users cu
                         WHERE cu.user_id = 1 AND
                               cu.category_id = topics.category_id AND
                               cu.notification_level = 0 AND
                               cu.category_id <> 5
                         ))  ORDER BY CASE
        WHEN (COALESCE(topics.pinned_at, '2010-01-01') > COALESCE(tu.cleared_pinned_at, '2010-01-01'))
          THEN '3000-01-01'
        ELSE topics.bumped_at
       END DESC LIMIT 30   ;
\x off
EXPLAIN ANALYZE SELECT  "topics"."id" AS t0_r0, "topics"."title" AS t0_r1, "topics"."last_posted_at" AS t0_r2, "topics"."created_at" AS t0_r3, "topics"."updated_at" AS t0_r4, "topics"."views" AS t0_r5, "topics"."posts_count" AS t0_r6, "topics"."user_id" AS t0_r7, "topics"."last_post_user_id" AS t0_r8, "topics"."reply_count" AS t0_r9, "topics"."featured_user1_id" AS t0_r10, "topics"."featured_user2_id" AS t0_r11, "topics"."featured_user3_id" AS t0_r12, "topics"."avg_time" AS t0_r13, "topics"."deleted_at" AS t0_r14, "topics"."highest_post_number" AS t0_r15, "topics"."image_url" AS t0_r16, "topics"."off_topic_count" AS t0_r17, "topics"."like_count" AS t0_r18, "topics"."incoming_link_count" AS t0_r19, "topics"."bookmark_count" AS t0_r20, "topics"."star_count" AS t0_r21, "topics"."category_id" AS t0_r22, "topics"."visible" AS t0_r23, "topics"."moderator_posts_count" AS t0_r24, "topics"."closed" AS t0_r25, "topics"."archived" AS t0_r26, "topics"."bumped_at" AS t0_r27, "topics"."has_summary" AS t0_r28, "topics"."vote_count" AS t0_r29, "topics"."archetype" AS t0_r30, "topics"."featured_user4_id" AS t0_r31, "topics"."notify_moderators_count" AS t0_r32, "topics"."spam_count" AS t0_r33, "topics"."illegal_count" AS t0_r34, "topics"."inappropriate_count" AS t0_r35, "topics"."pinned_at" AS t0_r36, "topics"."score" AS t0_r37, "topics"."percent_rank" AS t0_r38, "topics"."notify_user_count" AS t0_r39, "topics"."subtype" AS t0_r40, "topics"."slug" AS t0_r41, "topics"."auto_close_at" AS t0_r42, "topics"."auto_close_user_id" AS t0_r43, "topics"."auto_close_started_at" AS t0_r44, "topics"."deleted_by_id" AS t0_r45, "topics"."participant_count" AS t0_r46, "topics"."word_count" AS t0_r47, "topics"."excerpt" AS t0_r48, "topics"."pinned_globally" AS t0_r49, "categories"."id" AS t1_r0, "categories"."name" AS t1_r1, "categories"."color" AS t1_r2, "categories"."topic_id" AS t1_r3, "categories"."topic_count" AS t1_r4, "categories"."created_at" AS t1_r5, "categories"."updated_at" AS t1_r6, "categories"."user_id" AS t1_r7, "categories"."topics_year" AS t1_r8, "categories"."topics_month" AS t1_r9, "categories"."topics_week" AS t1_r10, "categories"."slug" AS t1_r11, "categories"."description" AS t1_r12, "categories"."text_color" AS t1_r13, "categories"."read_restricted" AS t1_r14, "categories"."auto_close_hours" AS t1_r15, "categories"."post_count" AS t1_r16, "categories"."latest_post_id" AS t1_r17, "categories"."latest_topic_id" AS t1_r18, "categories"."position" AS t1_r19, "categories"."parent_category_id" AS t1_r20, "categories"."posts_year" AS t1_r21, "categories"."posts_month" AS t1_r22, "categories"."posts_week" AS t1_r23, "categories"."email_in" AS t1_r24, "categories"."email_in_allow_strangers" AS t1_r25, "categories"."topics_day" AS t1_r26, "categories"."posts_day" AS t1_r27, "categories"."logo_url" AS t1_r28, "categories"."background_url" AS t1_r29, "categories"."allow_badges" AS t1_r30, "topic_only_relative_urls_categories"."id" AS t2_r0, "topic_only_relative_urls_categories"."title" AS t2_r1, "topic_only_relative_urls_categories"."last_posted_at" AS t2_r2, "topic_only_relative_urls_categories"."created_at" AS t2_r3, "topic_only_relative_urls_categories"."updated_at" AS t2_r4, "topic_only_relative_urls_categories"."views" AS t2_r5, "topic_only_relative_urls_categories"."posts_count" AS t2_r6, "topic_only_relative_urls_categories"."user_id" AS t2_r7, "topic_only_relative_urls_categories"."last_post_user_id" AS t2_r8, "topic_only_relative_urls_categories"."reply_count" AS t2_r9, "topic_only_relative_urls_categories"."featured_user1_id" AS t2_r10, "topic_only_relative_urls_categories"."featured_user2_id" AS t2_r11, "topic_only_relative_urls_categories"."featured_user3_id" AS t2_r12, "topic_only_relative_urls_categories"."avg_time" AS t2_r13, "topic_only_relative_urls_categories"."deleted_at" AS t2_r14, "topic_only_relative_urls_categories"."highest_post_number" AS t2_r15, "topic_only_relative_urls_categories"."image_url" AS t2_r16, "topic_only_relative_urls_categories"."off_topic_count" AS t2_r17, "topic_only_relative_urls_categories"."like_count" AS t2_r18, "topic_only_relative_urls_categories"."incoming_link_count" AS t2_r19, "topic_only_relative_urls_categories"."bookmark_count" AS t2_r20, "topic_only_relative_urls_categories"."star_count" AS t2_r21, "topic_only_relative_urls_categories"."category_id" AS t2_r22, "topic_only_relative_urls_categories"."visible" AS t2_r23, "topic_only_relative_urls_categories"."moderator_posts_count" AS t2_r24, "topic_only_relative_urls_categories"."closed" AS t2_r25, "topic_only_relative_urls_categories"."archived" AS t2_r26, "topic_only_relative_urls_categories"."bumped_at" AS t2_r27, "topic_only_relative_urls_categories"."has_summary" AS t2_r28, "topic_only_relative_urls_categories"."vote_count" AS t2_r29, "topic_only_relative_urls_categories"."archetype" AS t2_r30, "topic_only_relative_urls_categories"."featured_user4_id" AS t2_r31, "topic_only_relative_urls_categories"."notify_moderators_count" AS t2_r32, "topic_only_relative_urls_categories"."spam_count" AS t2_r33, "topic_only_relative_urls_categories"."illegal_count" AS t2_r34, "topic_only_relative_urls_categories"."inappropriate_count" AS t2_r35, "topic_only_relative_urls_categories"."pinned_at" AS t2_r36, "topic_only_relative_urls_categories"."score" AS t2_r37, "topic_only_relative_urls_categories"."percent_rank" AS t2_r38, "topic_only_relative_urls_categories"."notify_user_count" AS t2_r39, "topic_only_relative_urls_categories"."subtype" AS t2_r40, "topic_only_relative_urls_categories"."slug" AS t2_r41, "topic_only_relative_urls_categories"."auto_close_at" AS t2_r42, "topic_only_relative_urls_categories"."auto_close_user_id" AS t2_r43, "topic_only_relative_urls_categories"."auto_close_started_at" AS t2_r44, "topic_only_relative_urls_categories"."deleted_by_id" AS t2_r45, "topic_only_relative_urls_categories"."participant_count" AS t2_r46, "topic_only_relative_urls_categories"."word_count" AS t2_r47, "topic_only_relative_urls_categories"."excerpt" AS t2_r48, "topic_only_relative_urls_categories"."pinned_globally" AS t2_r49 FROM "topics" LEFT OUTER JOIN "categories" ON "categories"."id" = "topics"."category_id" LEFT OUTER JOIN "topics" "topic_only_relative_urls_categories" ON "topic_only_relative_urls_categories"."id" = "categories"."topic_id" AND ("topic_only_relative_urls_categories"."deleted_at" IS NULL) LEFT OUTER JOIN topic_users AS tu ON (topics.id = tu.topic_id AND tu.user_id = 1) WHERE ("topics"."deleted_at" IS NULL) AND (categories.id = 5 or (categories.parent_category_id = 5 AND categories.topic_id <> topics.id)) AND (topics.archetype <> 'private_message') AND (NOT EXISTS(
                         SELECT 1 FROM category_users cu
                         WHERE cu.user_id = 1 AND
                               cu.category_id = topics.category_id AND
                               cu.notification_level = 0 AND
                               cu.category_id <> 5
                         ))  ORDER BY CASE
        WHEN (COALESCE(topics.pinned_at, '2010-01-01') > COALESCE(tu.cleared_pinned_at, '2010-01-01'))
          THEN '3000-01-01'
        ELSE topics.bumped_at
       END DESC LIMIT 30   ;
SELECT * FROM snder;
SELECT * FROM sender;
SELECT * FROM sender WHERE nickname = 'xfix';
EXPLAIN SELECT * FROM sender WHERE nickname = 'xfix';
SELECT COUNT(*) FROM backlog JOIN nickname USING (senderid);
SELECT COUNT(*) FROM backlog JOIN sender USING (senderid);
EXPLAIN SELECT COUNT(*) FROM backlog JOIN sender USING (senderid);
SELECT COUNT(*) FROM backlog JOIN sender USING (senderid) WHERE nickname = 'xfix';
EXPLAIN SELECT COUNT(*) FROM backlog JOIN sender USING (senderid) WHERE nickname = 'xfix';
EXPLAIN ANALYZE SELECT COUNT(*) FROM backlog JOIN sender USING (senderid) WHERE nickname = 'xfix';
SELECT COUNT(*) FROM buffer;
SELECT * FROM buffer;
\x auto
SELECT * FROM buffer;
SELECT * FROM backlog WHERE bufferid = 10;
EXPLAIN SELECT * FROM backlog WHERE bufferid = 10;
 SELECT COUNT(*) FROM backlog WHERE bufferid = 10;
SELECT COUNT(*) FROM backlog JOIN sender USING (senderid) WHERE bufferid = 10;
EXPLAIN SELECT COUNT(*) FROM backlog JOIN sender USING (senderid) WHERE bufferid = 10;
EXPLAIN SELECT COUNT(*) FROM backlog  WHERE bufferid = 10;
EXPLAIN SELECT COUNT(*) FROM backlog RIGHT JOIN sender USING (senderid) WHERE bufferid = 10;
EXPLAIN SELECT COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10;
EXPLAIN SELECT COUNT(*) FROM backlog LEFT OUTER JOIN sender USING (senderid) WHERE bufferid = 10;
\h LEFT JOIN
\h LEFt
EXPLAIN SELECT COUNT(*) FROM backlog LEFT OUTER JOIN sender USING (senderid) WHERE bufferid = 10;
EXPLAIN SELECT COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10;
EXPLAIN SELECT COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10;
SELECT COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10;
EXPLAIN SELECT COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10;
EXPLAIN SELECT COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog RIGHT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog EQUIVALENT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog EQUIVALEN JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog EQUIV JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog SQUARE JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog HELPFUL JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog OUTER JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname;
SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname;
SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname ORDER BY count;
SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname ORDER BY count DESC LIMIT 10;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname ORDER BY count DESC LIMIT 10;
EXPLAIN ANALYZE SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname ORDER BY count DESC LIMIT 10;
EXPLAIN ANALYZE SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname ORDER BY count;
EXPLAIN ANALYZE SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname ORDER BY count DESC;
EXPLAIN ANALYZE SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname ORDER BY count DESC LIMIT 10;
EXPLAIN ANALYZE SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname ORDER BY count DESC LIMIT 10;
EXPLAIN ANALYZE SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname ORDER BY count DESC LIMIT 10;
EXPLAIN ANALYZE SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname ORDER BY count DESC;
SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname ORDER BY count DESC;
SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname ORDER BY count DESC, nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname ORDER BY count DESC, nickname;
SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname ORDER BY count DESC, nickname;
SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname HAVING nickname ORDER BY count DESC, nickname;
SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname;
SELECT * FROM sender WHERE nickname IS NULL;
SELECT * FROM backlog WHERE senderid = 1;
SELECT * FROM backlog WHERE senderid = 1;
SELECT * FROM backlog WHERE senderid = 1 LIMIT 10;
SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname;
SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname;
SELECT nickname, COUNT(*) FROM backlog RIGHT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname;
SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname;
SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname;
ANALYZE sender;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname;
ANALYZE backlog;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname;
SELECT COUNT(*) FROM sender;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname IS NOT NULL ORDER BY count DESC, nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname ORDER BY count DESC, nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname;
\d sender
EXPLAIN SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname, COUNT(*) HAVING nickname IS NOT NULL ORDER BY count DESC, nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname HAVING nickname IS NOT NULL;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog LEFT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog RIGHT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname;
SELECT nickname, COUNT(*) FROM backlog RIGHT JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname;
SELECT nickname, COUNT(*) FROM backlog JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname HAVING senderid != 1 ORDER BY count DESC, nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog JOIN sender USING (senderid) WHERE bufferid = 10 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog JOIN sender USING (senderid) WHERE bufferid = 3333 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog JOIN sender USING (senderid) WHERE bufferid = 82 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname;
EXPLAIN SELECT nickname, COUNT(*) FROM backlog JOIN sender USING (senderid) WHERE bufferid = 82 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname LIMIT 50;
SELECT nickname, COUNT(*) FROM backlog JOIN sender USING (senderid) WHERE bufferid = 82 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname LIMIT 50;
SELECT nickname, COUNT(*) AS counter FROM backlog JOIN sender USING (senderid) WHERE bufferid = 82 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname WHERE counter >= 50;
EXPLAIN SELECT nickname, COUNT(*) AS counter FROM backlog JOIN sender USING (senderid) WHERE bufferid = 82 AND counter >= 50GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname;
EXPLAIN SELECT nickname, COUNT(*) AS counter FROM backlog JOIN sender USING (senderid) WHERE bufferid = 82 AND counter >= 50 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname;
EXPLAIN SELECT nickname, COUNT(*) AS counter FROM backlog JOIN sender USING (senderid) WHERE bufferid = 82 GROUP BY nickname HAVING nickname IS NOT NULL AND counter >= 50 ORDER BY count DESC, nickname;
EXPLAIN SELECT nickname, COUNT(*) AS counter FROM backlog JOIN sender USING (senderid) WHERE bufferid = 82 GROUP BY nickname HAVING nickname IS NOT NULL AND COUNT(*) >= 50 ORDER BY count DESC, nickname;
EXPLAIN SELECT nickname, COUNT(*) AS count FROM backlog JOIN sender USING (senderid) WHERE bufferid = 82 GROUP BY nickname HAVING nickname IS NOT NULL AND COUNT(*) >= 50 ORDER BY count DESC, nickname;
EXPLAIN SELECT nickname, COUNT(*) AS count FROM backlog JOIN sender USING (senderid) WHERE bufferid = 82 GROUP BY nickname HAVING nickname IS NOT NULL AND count >= 50 ORDER BY count DESC, nickname;
EXPLAIN SELECT nickname, COUNT(*) AS count FROM backlog JOIN sender USING (senderid) WHERE bufferid = 82 GROUP BY nickname HAVING nickname IS NOT NULL AND COUNT(*) >= 50 ORDER BY count DESC, nickname;
EXPLAIN ANALYZE SELECT nickname, COUNT(*) AS count FROM backlog JOIN sender USING (senderid) WHERE bufferid = 82 GROUP BY nickname HAVING nickname IS NOT NULL AND COUNT(*) >= 50 ORDER BY count DESC, nickname;
SELECT nickname, COUNT(*) AS count FROM backlog JOIN sender USING (senderid) WHERE bufferid = 82 GROUP BY nickname HAVING nickname IS NOT NULL AND COUNT(*) >= 50 ORDER BY count DESC, nickname;
EXPLAIN WITH stuff AS (SELECT nickname, COUNT(*) AS count FROM backlog JOIN sender USING (senderid) WHERE bufferid = 82 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname) SELECT * FROM stuff WHERE count >= 50;
WITH stuff AS (SELECT nickname, COUNT(*) AS count FROM backlog JOIN sender USING (senderid) WHERE bufferid = 82 GROUP BY nickname HAVING nickname IS NOT NULL ORDER BY count DESC, nickname) SELECT * FROM stuff WHERE count >= 50;
SELECT DATE 'infinity';
SELECT  "topics"."id" AS t0_r0, "topics"."title" AS t0_r1, "topics"."last_posted_at" AS t0_r2, "topics"."created_at" AS t0_r3, "topics"."updated_at" AS t0_r4, "topics"."views" AS t0_r5, "topics"."posts_count" AS t0_r6, "topics"."user_id" AS t0_r7, "topics"."last_post_user_id" AS t0_r8, "topics"."reply_count" AS t0_r9, "topics"."featured_user1_id" AS t0_r10, "topics"."featured_user2_id" AS t0_r11, "topics"."featured_user3_id" AS t0_r12, "topics"."avg_time" AS t0_r13, "topics"."deleted_at" AS t0_r14, "topics"."highest_post_number" AS t0_r15, "topics"."image_url" AS t0_r16, "topics"."off_topic_count" AS t0_r17, "topics"."like_count" AS t0_r18, "topics"."incoming_link_count" AS t0_r19, "topics"."bookmark_count" AS t0_r20, "topics"."star_count" AS t0_r21, "topics"."category_id" AS t0_r22, "topics"."visible" AS t0_r23, "topics"."moderator_posts_count" AS t0_r24, "topics"."closed" AS t0_r25, "topics"."archived" AS t0_r26, "topics"."bumped_at" AS t0_r27, "topics"."has_summary" AS t0_r28, "topics"."vote_count" AS t0_r29, "topics"."archetype" AS t0_r30, "topics"."featured_user4_id" AS t0_r31, "topics"."notify_moderators_count" AS t0_r32, "topics"."spam_count" AS t0_r33, "topics"."illegal_count" AS t0_r34, "topics"."inappropriate_count" AS t0_r35, "topics"."pinned_at" AS t0_r36, "topics"."score" AS t0_r37, "topics"."percent_rank" AS t0_r38, "topics"."notify_user_count" AS t0_r39, "topics"."subtype" AS t0_r40, "topics"."slug" AS t0_r41, "topics"."auto_close_at" AS t0_r42, "topics"."auto_close_user_id" AS t0_r43, "topics"."auto_close_started_at" AS t0_r44, "topics"."deleted_by_id" AS t0_r45, "topics"."participant_count" AS t0_r46, "topics"."word_count" AS t0_r47, "topics"."excerpt" AS t0_r48, "topics"."pinned_globally" AS t0_r49, "categories"."id" AS t1_r0, "categories"."name" AS t1_r1, "categories"."color" AS t1_r2, "categories"."topic_id" AS t1_r3, "categories"."topic_count" AS t1_r4, "categories"."created_at" AS t1_r5, "categories"."updated_at" AS t1_r6, "categories"."user_id" AS t1_r7, "categories"."topics_year" AS t1_r8, "categories"."topics_month" AS t1_r9, "categories"."topics_week" AS t1_r10, "categories"."slug" AS t1_r11, "categories"."description" AS t1_r12, "categories"."text_color" AS t1_r13, "categories"."read_restricted" AS t1_r14, "categories"."auto_close_hours" AS t1_r15, "categories"."post_count" AS t1_r16, "categories"."latest_post_id" AS t1_r17, "categories"."latest_topic_id" AS t1_r18, "categories"."position" AS t1_r19, "categories"."parent_category_id" AS t1_r20, "categories"."posts_year" AS t1_r21, "categories"."posts_month" AS t1_r22, "categories"."posts_week" AS t1_r23, "categories"."email_in" AS t1_r24, "categories"."email_in_allow_strangers" AS t1_r25, "categories"."topics_day" AS t1_r26, "categories"."posts_day" AS t1_r27, "categories"."logo_url" AS t1_r28, "categories"."background_url" AS t1_r29, "categories"."allow_badges" AS t1_r30, "topic_only_relative_urls_categories"."id" AS t2_r0, "topic_only_relative_urls_categories"."title" AS t2_r1, "topic_only_relative_urls_categories"."last_posted_at" AS t2_r2, "topic_only_relative_urls_categories"."created_at" AS t2_r3, "topic_only_relative_urls_categories"."updated_at" AS t2_r4, "topic_only_relative_urls_categories"."views" AS t2_r5, "topic_only_relative_urls_categories"."posts_count" AS t2_r6, "topic_only_relative_urls_categories"."user_id" AS t2_r7, "topic_only_relative_urls_categories"."last_post_user_id" AS t2_r8, "topic_only_relative_urls_categories"."reply_count" AS t2_r9, "topic_only_relative_urls_categories"."featured_user1_id" AS t2_r10, "topic_only_relative_urls_categories"."featured_user2_id" AS t2_r11, "topic_only_relative_urls_categories"."featured_user3_id" AS t2_r12, "topic_only_relative_urls_categories"."avg_time" AS t2_r13, "topic_only_relative_urls_categories"."deleted_at" AS t2_r14, "topic_only_relative_urls_categories"."highest_post_number" AS t2_r15, "topic_only_relative_urls_categories"."image_url" AS t2_r16, "topic_only_relative_urls_categories"."off_topic_count" AS t2_r17, "topic_only_relative_urls_categories"."like_count" AS t2_r18, "topic_only_relative_urls_categories"."incoming_link_count" AS t2_r19, "topic_only_relative_urls_categories"."bookmark_count" AS t2_r20, "topic_only_relative_urls_categories"."star_count" AS t2_r21, "topic_only_relative_urls_categories"."category_id" AS t2_r22, "topic_only_relative_urls_categories"."visible" AS t2_r23, "topic_only_relative_urls_categories"."moderator_posts_count" AS t2_r24, "topic_only_relative_urls_categories"."closed" AS t2_r25, "topic_only_relative_urls_categories"."archived" AS t2_r26, "topic_only_relative_urls_categories"."bumped_at" AS t2_r27, "topic_only_relative_urls_categories"."has_summary" AS t2_r28, "topic_only_relative_urls_categories"."vote_count" AS t2_r29, "topic_only_relative_urls_categories"."archetype" AS t2_r30, "topic_only_relative_urls_categories"."featured_user4_id" AS t2_r31, "topic_only_relative_urls_categories"."notify_moderators_count" AS t2_r32, "topic_only_relative_urls_categories"."spam_count" AS t2_r33, "topic_only_relative_urls_categories"."illegal_count" AS t2_r34, "topic_only_relative_urls_categories"."inappropriate_count" AS t2_r35, "topic_only_relative_urls_categories"."pinned_at" AS t2_r36, "topic_only_relative_urls_categories"."score" AS t2_r37, "topic_only_relative_urls_categories"."percent_rank" AS t2_r38, "topic_only_relative_urls_categories"."notify_user_count" AS t2_r39, "topic_only_relative_urls_categories"."subtype" AS t2_r40, "topic_only_relative_urls_categories"."slug" AS t2_r41, "topic_only_relative_urls_categories"."auto_close_at" AS t2_r42, "topic_only_relative_urls_categories"."auto_close_user_id" AS t2_r43, "topic_only_relative_urls_categories"."auto_close_started_at" AS t2_r44, "topic_only_relative_urls_categories"."deleted_by_id" AS t2_r45, "topic_only_relative_urls_categories"."participant_count" AS t2_r46, "topic_only_relative_urls_categories"."word_count" AS t2_r47, "topic_only_relative_urls_categories"."excerpt" AS t2_r48, "topic_only_relative_urls_categories"."pinned_globally" AS t2_r49 FROM "topics" LEFT OUTER JOIN "categories" ON "categories"."id" = "topics"."category_id" LEFT OUTER JOIN "topics" "topic_only_relative_urls_categories" ON "topic_only_relative_urls_categories"."id" = "categories"."topic_id" AND ("topic_only_relative_urls_categories"."deleted_at" IS NULL) LEFT OUTER JOIN topic_users AS tu ON (topics.id = tu.topic_id AND tu.user_id = 1) WHERE ("topics"."deleted_at" IS NULL) AND (topics.archetype <> 'private_message') AND (COALESCE(categories.topic_id, 0) <> topics.id) AND (NOT EXISTS(
                         SELECT 1 FROM category_users cu
                         WHERE cu.user_id = 1 AND
                               cu.category_id = topics.category_id AND
                               cu.notification_level = 0 AND
                               cu.category_id <> -1
                         ))  ORDER BY CASE
        WHEN topics.pinned_globally and (COALESCE(topics.pinned_at, '2010-01-01') > COALESCE(tu.cleared_pinned_at, '2010-01-01'))
          THEN 'infinity'
        ELSE topics.bumped_at
       END DESC LIMIT 30;
SELECT  "topics"."id" AS t0_r0, "topics"."title" AS t0_r1, "topics"."last_posted_at" AS t0_r2, "topics"."created_at" AS t0_r3, "topics"."updated_at" AS t0_r4, "topics"."views" AS t0_r5, "topics"."posts_count" AS t0_r6, "topics"."user_id" AS t0_r7, "topics"."last_post_user_id" AS t0_r8, "topics"."reply_count" AS t0_r9, "topics"."featured_user1_id" AS t0_r10, "topics"."featured_user2_id" AS t0_r11, "topics"."featured_user3_id" AS t0_r12, "topics"."avg_time" AS t0_r13, "topics"."deleted_at" AS t0_r14, "topics"."highest_post_number" AS t0_r15, "topics"."image_url" AS t0_r16, "topics"."off_topic_count" AS t0_r17, "topics"."like_count" AS t0_r18, "topics"."incoming_link_count" AS t0_r19, "topics"."bookmark_count" AS t0_r20, "topics"."star_count" AS t0_r21, "topics"."category_id" AS t0_r22, "topics"."visible" AS t0_r23, "topics"."moderator_posts_count" AS t0_r24, "topics"."closed" AS t0_r25, "topics"."archived" AS t0_r26, "topics"."bumped_at" AS t0_r27, "topics"."has_summary" AS t0_r28, "topics"."vote_count" AS t0_r29, "topics"."archetype" AS t0_r30, "topics"."featured_user4_id" AS t0_r31, "topics"."notify_moderators_count" AS t0_r32, "topics"."spam_count" AS t0_r33, "topics"."illegal_count" AS t0_r34, "topics"."inappropriate_count" AS t0_r35, "topics"."pinned_at" AS t0_r36, "topics"."score" AS t0_r37, "topics"."percent_rank" AS t0_r38, "topics"."notify_user_count" AS t0_r39, "topics"."subtype" AS t0_r40, "topics"."slug" AS t0_r41, "topics"."auto_close_at" AS t0_r42, "topics"."auto_close_user_id" AS t0_r43, "topics"."auto_close_started_at" AS t0_r44, "topics"."deleted_by_id" AS t0_r45, "topics"."participant_count" AS t0_r46, "topics"."word_count" AS t0_r47, "topics"."excerpt" AS t0_r48, "topics"."pinned_globally" AS t0_r49, "categories"."id" AS t1_r0, "categories"."name" AS t1_r1, "categories"."color" AS t1_r2, "categories"."topic_id" AS t1_r3, "categories"."topic_count" AS t1_r4, "categories"."created_at" AS t1_r5, "categories"."updated_at" AS t1_r6, "categories"."user_id" AS t1_r7, "categories"."topics_year" AS t1_r8, "categories"."topics_month" AS t1_r9, "categories"."topics_week" AS t1_r10, "categories"."slug" AS t1_r11, "categories"."description" AS t1_r12, "categories"."text_color" AS t1_r13, "categories"."read_restricted" AS t1_r14, "categories"."auto_close_hours" AS t1_r15, "categories"."post_count" AS t1_r16, "categories"."latest_post_id" AS t1_r17, "categories"."latest_topic_id" AS t1_r18, "categories"."position" AS t1_r19, "categories"."parent_category_id" AS t1_r20, "categories"."posts_year" AS t1_r21, "categories"."posts_month" AS t1_r22, "categories"."posts_week" AS t1_r23, "categories"."email_in" AS t1_r24, "categories"."email_in_allow_strangers" AS t1_r25, "categories"."topics_day" AS t1_r26, "categories"."posts_day" AS t1_r27, "categories"."logo_url" AS t1_r28, "categories"."background_url" AS t1_r29, "categories"."allow_badges" AS t1_r30, "topic_only_relative_urls_categories"."id" AS t2_r0, "topic_only_relative_urls_categories"."title" AS t2_r1, "topic_only_relative_urls_categories"."last_posted_at" AS t2_r2, "topic_only_relative_urls_categories"."created_at" AS t2_r3, "topic_only_relative_urls_categories"."updated_at" AS t2_r4, "topic_only_relative_urls_categories"."views" AS t2_r5, "topic_only_relative_urls_categories"."posts_count" AS t2_r6, "topic_only_relative_urls_categories"."user_id" AS t2_r7, "topic_only_relative_urls_categories"."last_post_user_id" AS t2_r8, "topic_only_relative_urls_categories"."reply_count" AS t2_r9, "topic_only_relative_urls_categories"."featured_user1_id" AS t2_r10, "topic_only_relative_urls_categories"."featured_user2_id" AS t2_r11, "topic_only_relative_urls_categories"."featured_user3_id" AS t2_r12, "topic_only_relative_urls_categories"."avg_time" AS t2_r13, "topic_only_relative_urls_categories"."deleted_at" AS t2_r14, "topic_only_relative_urls_categories"."highest_post_number" AS t2_r15, "topic_only_relative_urls_categories"."image_url" AS t2_r16, "topic_only_relative_urls_categories"."off_topic_count" AS t2_r17, "topic_only_relative_urls_categories"."like_count" AS t2_r18, "topic_only_relative_urls_categories"."incoming_link_count" AS t2_r19, "topic_only_relative_urls_categories"."bookmark_count" AS t2_r20, "topic_only_relative_urls_categories"."star_count" AS t2_r21, "topic_only_relative_urls_categories"."category_id" AS t2_r22, "topic_only_relative_urls_categories"."visible" AS t2_r23, "topic_only_relative_urls_categories"."moderator_posts_count" AS t2_r24, "topic_only_relative_urls_categories"."closed" AS t2_r25, "topic_only_relative_urls_categories"."archived" AS t2_r26, "topic_only_relative_urls_categories"."bumped_at" AS t2_r27, "topic_only_relative_urls_categories"."has_summary" AS t2_r28, "topic_only_relative_urls_categories"."vote_count" AS t2_r29, "topic_only_relative_urls_categories"."archetype" AS t2_r30, "topic_only_relative_urls_categories"."featured_user4_id" AS t2_r31, "topic_only_relative_urls_categories"."notify_moderators_count" AS t2_r32, "topic_only_relative_urls_categories"."spam_count" AS t2_r33, "topic_only_relative_urls_categories"."illegal_count" AS t2_r34, "topic_only_relative_urls_categories"."inappropriate_count" AS t2_r35, "topic_only_relative_urls_categories"."pinned_at" AS t2_r36, "topic_only_relative_urls_categories"."score" AS t2_r37, "topic_only_relative_urls_categories"."percent_rank" AS t2_r38, "topic_only_relative_urls_categories"."notify_user_count" AS t2_r39, "topic_only_relative_urls_categories"."subtype" AS t2_r40, "topic_only_relative_urls_categories"."slug" AS t2_r41, "topic_only_relative_urls_categories"."auto_close_at" AS t2_r42, "topic_only_relative_urls_categories"."auto_close_user_id" AS t2_r43, "topic_only_relative_urls_categories"."auto_close_started_at" AS t2_r44, "topic_only_relative_urls_categories"."deleted_by_id" AS t2_r45, "topic_only_relative_urls_categories"."participant_count" AS t2_r46, "topic_only_relative_urls_categories"."word_count" AS t2_r47, "topic_only_relative_urls_categories"."excerpt" AS t2_r48, "topic_only_relative_urls_categories"."pinned_globally" AS t2_r49 FROM "topics" LEFT OUTER JOIN "categories" ON "categories"."id" = "topics"."category_id" LEFT OUTER JOIN "topics" "topic_only_relative_urls_categories" ON "topic_only_relative_urls_categories"."id" = "categories"."topic_id" AND ("topic_only_relative_urls_categories"."deleted_at" IS NULL) LEFT OUTER JOIN topic_users AS tu ON (topics.id = tu.topic_id AND tu.user_id = 1) WHERE ("topics"."deleted_at" IS NULL) AND (topics.archetype <> 'private_message') AND (COALESCE(categories.topic_id, 0) <> topics.id) AND (NOT EXISTS(
                         SELECT 1 FROM category_users cu
                         WHERE cu.user_id = 1 AND
                               cu.category_id = topics.category_id AND
                               cu.notification_level = 0 AND
                               cu.category_id <> -1
                         ))  ORDER BY CASE
        WHEN topics.pinned_globally and (COALESCE(topics.pinned_at, '2010-01-01') > COALESCE(tu.cleared_pinned_at, '2010-01-01'))
          THEN 'infinity'
        ELSE topics.bumped_at
       END DESC LIMIT 30;
SELECT TIME 'infinity';
SELECT TIMESTAMP 'infinity';
SELECT DATE 'infinity';
SELECT DATE 'infinity' - '20 years';
SELECT DATE 'infinity' - INTERVAL '20 years';
SELECT DATE 'infinity' - INTERVAL '20000 years';
SELECT DATE 'infinity' - INTERVAL '200000000000000 years';
SELECT DATE 'infinity' - INTERVAL '200000000000 years';
SELECT DATE 'infinity' - INTERVAL '20000000000 years';
SELECT DATE 'infinity' - INTERVAL '2000000000 years';
SELECT DATE 'infinity' - INTERVAL '2000000000 years';
EXPLAIN SELECT 1;
require('pg').connect('', function (err, client, done) {
client.query(
'SELECT add_points($1, $2); SELECT add_points($3, 4);',
[self.p1.name, self.p1.tppPoints || 0, self.p2.name, self.p2.tppPoints || 0], done
);
});
\d points
\schema
\s
\s points
